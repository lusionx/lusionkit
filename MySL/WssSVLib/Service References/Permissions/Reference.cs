//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace WssSVLib.Permissions {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", ConfigurationName="Permissions.PermissionsSoap")]
    public interface PermissionsSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/directory/GetPermissionCollection", ReplyAction="*")]
        System.IAsyncResult BeginGetPermissionCollection(WssSVLib.Permissions.GetPermissionCollectionRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Permissions.GetPermissionCollectionResponse EndGetPermissionCollection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/directory/AddPermission", ReplyAction="*")]
        System.IAsyncResult BeginAddPermission(WssSVLib.Permissions.AddPermissionRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Permissions.AddPermissionResponse EndAddPermission(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/directory/AddPermissionCollection", ReplyAction="*")]
        System.IAsyncResult BeginAddPermissionCollection(WssSVLib.Permissions.AddPermissionCollectionRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Permissions.AddPermissionCollectionResponse EndAddPermissionCollection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/directory/UpdatePermission", ReplyAction="*")]
        System.IAsyncResult BeginUpdatePermission(WssSVLib.Permissions.UpdatePermissionRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Permissions.UpdatePermissionResponse EndUpdatePermission(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/directory/RemovePermission", ReplyAction="*")]
        System.IAsyncResult BeginRemovePermission(WssSVLib.Permissions.RemovePermissionRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Permissions.RemovePermissionResponse EndRemovePermission(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/directory/RemovePermissionCollection" +
            "", ReplyAction="*")]
        System.IAsyncResult BeginRemovePermissionCollection(WssSVLib.Permissions.RemovePermissionCollectionRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Permissions.RemovePermissionCollectionResponse EndRemovePermissionCollection(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPermissionCollectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPermissionCollection", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.GetPermissionCollectionRequestBody Body;
        
        public GetPermissionCollectionRequest() {
        }
        
        public GetPermissionCollectionRequest(WssSVLib.Permissions.GetPermissionCollectionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/")]
    public partial class GetPermissionCollectionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string objectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string objectType;
        
        public GetPermissionCollectionRequestBody() {
        }
        
        public GetPermissionCollectionRequestBody(string objectName, string objectType) {
            this.objectName = objectName;
            this.objectType = objectType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPermissionCollectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPermissionCollectionResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.GetPermissionCollectionResponseBody Body;
        
        public GetPermissionCollectionResponse() {
        }
        
        public GetPermissionCollectionResponse(WssSVLib.Permissions.GetPermissionCollectionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/")]
    public partial class GetPermissionCollectionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement GetPermissionCollectionResult;
        
        public GetPermissionCollectionResponseBody() {
        }
        
        public GetPermissionCollectionResponseBody(System.Xml.Linq.XElement GetPermissionCollectionResult) {
            this.GetPermissionCollectionResult = GetPermissionCollectionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPermissionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPermission", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.AddPermissionRequestBody Body;
        
        public AddPermissionRequest() {
        }
        
        public AddPermissionRequest(WssSVLib.Permissions.AddPermissionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/")]
    public partial class AddPermissionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string objectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string objectType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string permissionIdentifier;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string permissionType;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int permissionMask;
        
        public AddPermissionRequestBody() {
        }
        
        public AddPermissionRequestBody(string objectName, string objectType, string permissionIdentifier, string permissionType, int permissionMask) {
            this.objectName = objectName;
            this.objectType = objectType;
            this.permissionIdentifier = permissionIdentifier;
            this.permissionType = permissionType;
            this.permissionMask = permissionMask;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPermissionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPermissionResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.AddPermissionResponseBody Body;
        
        public AddPermissionResponse() {
        }
        
        public AddPermissionResponse(WssSVLib.Permissions.AddPermissionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class AddPermissionResponseBody {
        
        public AddPermissionResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPermissionCollectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPermissionCollection", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.AddPermissionCollectionRequestBody Body;
        
        public AddPermissionCollectionRequest() {
        }
        
        public AddPermissionCollectionRequest(WssSVLib.Permissions.AddPermissionCollectionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/")]
    public partial class AddPermissionCollectionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string objectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string objectType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.Linq.XElement permissionsInfoXml;
        
        public AddPermissionCollectionRequestBody() {
        }
        
        public AddPermissionCollectionRequestBody(string objectName, string objectType, System.Xml.Linq.XElement permissionsInfoXml) {
            this.objectName = objectName;
            this.objectType = objectType;
            this.permissionsInfoXml = permissionsInfoXml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPermissionCollectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPermissionCollectionResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.AddPermissionCollectionResponseBody Body;
        
        public AddPermissionCollectionResponse() {
        }
        
        public AddPermissionCollectionResponse(WssSVLib.Permissions.AddPermissionCollectionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class AddPermissionCollectionResponseBody {
        
        public AddPermissionCollectionResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePermissionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdatePermission", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.UpdatePermissionRequestBody Body;
        
        public UpdatePermissionRequest() {
        }
        
        public UpdatePermissionRequest(WssSVLib.Permissions.UpdatePermissionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/")]
    public partial class UpdatePermissionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string objectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string objectType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string permissionIdentifier;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string permissionType;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int permissionMask;
        
        public UpdatePermissionRequestBody() {
        }
        
        public UpdatePermissionRequestBody(string objectName, string objectType, string permissionIdentifier, string permissionType, int permissionMask) {
            this.objectName = objectName;
            this.objectType = objectType;
            this.permissionIdentifier = permissionIdentifier;
            this.permissionType = permissionType;
            this.permissionMask = permissionMask;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePermissionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdatePermissionResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.UpdatePermissionResponseBody Body;
        
        public UpdatePermissionResponse() {
        }
        
        public UpdatePermissionResponse(WssSVLib.Permissions.UpdatePermissionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UpdatePermissionResponseBody {
        
        public UpdatePermissionResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemovePermissionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemovePermission", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.RemovePermissionRequestBody Body;
        
        public RemovePermissionRequest() {
        }
        
        public RemovePermissionRequest(WssSVLib.Permissions.RemovePermissionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/")]
    public partial class RemovePermissionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string objectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string objectType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string permissionIdentifier;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string permissionType;
        
        public RemovePermissionRequestBody() {
        }
        
        public RemovePermissionRequestBody(string objectName, string objectType, string permissionIdentifier, string permissionType) {
            this.objectName = objectName;
            this.objectType = objectType;
            this.permissionIdentifier = permissionIdentifier;
            this.permissionType = permissionType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemovePermissionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemovePermissionResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.RemovePermissionResponseBody Body;
        
        public RemovePermissionResponse() {
        }
        
        public RemovePermissionResponse(WssSVLib.Permissions.RemovePermissionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class RemovePermissionResponseBody {
        
        public RemovePermissionResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemovePermissionCollectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemovePermissionCollection", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.RemovePermissionCollectionRequestBody Body;
        
        public RemovePermissionCollectionRequest() {
        }
        
        public RemovePermissionCollectionRequest(WssSVLib.Permissions.RemovePermissionCollectionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/")]
    public partial class RemovePermissionCollectionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string objectName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string objectType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.Linq.XElement memberIdsXml;
        
        public RemovePermissionCollectionRequestBody() {
        }
        
        public RemovePermissionCollectionRequestBody(string objectName, string objectType, System.Xml.Linq.XElement memberIdsXml) {
            this.objectName = objectName;
            this.objectType = objectType;
            this.memberIdsXml = memberIdsXml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemovePermissionCollectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemovePermissionCollectionResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/directory/", Order=0)]
        public WssSVLib.Permissions.RemovePermissionCollectionResponseBody Body;
        
        public RemovePermissionCollectionResponse() {
        }
        
        public RemovePermissionCollectionResponse(WssSVLib.Permissions.RemovePermissionCollectionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class RemovePermissionCollectionResponseBody {
        
        public RemovePermissionCollectionResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface PermissionsSoapChannel : WssSVLib.Permissions.PermissionsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPermissionCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPermissionCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class PermissionsSoapClient : System.ServiceModel.ClientBase<WssSVLib.Permissions.PermissionsSoap>, WssSVLib.Permissions.PermissionsSoap {
        
        private BeginOperationDelegate onBeginGetPermissionCollectionDelegate;
        
        private EndOperationDelegate onEndGetPermissionCollectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetPermissionCollectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPermissionDelegate;
        
        private EndOperationDelegate onEndAddPermissionDelegate;
        
        private System.Threading.SendOrPostCallback onAddPermissionCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPermissionCollectionDelegate;
        
        private EndOperationDelegate onEndAddPermissionCollectionDelegate;
        
        private System.Threading.SendOrPostCallback onAddPermissionCollectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePermissionDelegate;
        
        private EndOperationDelegate onEndUpdatePermissionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePermissionCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemovePermissionDelegate;
        
        private EndOperationDelegate onEndRemovePermissionDelegate;
        
        private System.Threading.SendOrPostCallback onRemovePermissionCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemovePermissionCollectionDelegate;
        
        private EndOperationDelegate onEndRemovePermissionCollectionDelegate;
        
        private System.Threading.SendOrPostCallback onRemovePermissionCollectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PermissionsSoapClient() {
        }
        
        public PermissionsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PermissionsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermissionsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermissionsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetPermissionCollectionCompletedEventArgs> GetPermissionCollectionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPermissionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPermissionCollectionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePermissionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemovePermissionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemovePermissionCollectionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Permissions.PermissionsSoap.BeginGetPermissionCollection(WssSVLib.Permissions.GetPermissionCollectionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPermissionCollection(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetPermissionCollection(string objectName, string objectType, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Permissions.GetPermissionCollectionRequest inValue = new WssSVLib.Permissions.GetPermissionCollectionRequest();
            inValue.Body = new WssSVLib.Permissions.GetPermissionCollectionRequestBody();
            inValue.Body.objectName = objectName;
            inValue.Body.objectType = objectType;
            return ((WssSVLib.Permissions.PermissionsSoap)(this)).BeginGetPermissionCollection(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Permissions.GetPermissionCollectionResponse WssSVLib.Permissions.PermissionsSoap.EndGetPermissionCollection(System.IAsyncResult result) {
            return base.Channel.EndGetPermissionCollection(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndGetPermissionCollection(System.IAsyncResult result) {
            WssSVLib.Permissions.GetPermissionCollectionResponse retVal = ((WssSVLib.Permissions.PermissionsSoap)(this)).EndGetPermissionCollection(result);
            return retVal.Body.GetPermissionCollectionResult;
        }
        
        private System.IAsyncResult OnBeginGetPermissionCollection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objectName = ((string)(inValues[0]));
            string objectType = ((string)(inValues[1]));
            return this.BeginGetPermissionCollection(objectName, objectType, callback, asyncState);
        }
        
        private object[] OnEndGetPermissionCollection(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndGetPermissionCollection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPermissionCollectionCompleted(object state) {
            if ((this.GetPermissionCollectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPermissionCollectionCompleted(this, new GetPermissionCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPermissionCollectionAsync(string objectName, string objectType) {
            this.GetPermissionCollectionAsync(objectName, objectType, null);
        }
        
        public void GetPermissionCollectionAsync(string objectName, string objectType, object userState) {
            if ((this.onBeginGetPermissionCollectionDelegate == null)) {
                this.onBeginGetPermissionCollectionDelegate = new BeginOperationDelegate(this.OnBeginGetPermissionCollection);
            }
            if ((this.onEndGetPermissionCollectionDelegate == null)) {
                this.onEndGetPermissionCollectionDelegate = new EndOperationDelegate(this.OnEndGetPermissionCollection);
            }
            if ((this.onGetPermissionCollectionCompletedDelegate == null)) {
                this.onGetPermissionCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPermissionCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetPermissionCollectionDelegate, new object[] {
                        objectName,
                        objectType}, this.onEndGetPermissionCollectionDelegate, this.onGetPermissionCollectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Permissions.PermissionsSoap.BeginAddPermission(WssSVLib.Permissions.AddPermissionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPermission(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAddPermission(string objectName, string objectType, string permissionIdentifier, string permissionType, int permissionMask, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Permissions.AddPermissionRequest inValue = new WssSVLib.Permissions.AddPermissionRequest();
            inValue.Body = new WssSVLib.Permissions.AddPermissionRequestBody();
            inValue.Body.objectName = objectName;
            inValue.Body.objectType = objectType;
            inValue.Body.permissionIdentifier = permissionIdentifier;
            inValue.Body.permissionType = permissionType;
            inValue.Body.permissionMask = permissionMask;
            return ((WssSVLib.Permissions.PermissionsSoap)(this)).BeginAddPermission(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Permissions.AddPermissionResponse WssSVLib.Permissions.PermissionsSoap.EndAddPermission(System.IAsyncResult result) {
            return base.Channel.EndAddPermission(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndAddPermission(System.IAsyncResult result) {
            WssSVLib.Permissions.AddPermissionResponse retVal = ((WssSVLib.Permissions.PermissionsSoap)(this)).EndAddPermission(result);
        }
        
        private System.IAsyncResult OnBeginAddPermission(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objectName = ((string)(inValues[0]));
            string objectType = ((string)(inValues[1]));
            string permissionIdentifier = ((string)(inValues[2]));
            string permissionType = ((string)(inValues[3]));
            int permissionMask = ((int)(inValues[4]));
            return this.BeginAddPermission(objectName, objectType, permissionIdentifier, permissionType, permissionMask, callback, asyncState);
        }
        
        private object[] OnEndAddPermission(System.IAsyncResult result) {
            this.EndAddPermission(result);
            return null;
        }
        
        private void OnAddPermissionCompleted(object state) {
            if ((this.AddPermissionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPermissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPermissionAsync(string objectName, string objectType, string permissionIdentifier, string permissionType, int permissionMask) {
            this.AddPermissionAsync(objectName, objectType, permissionIdentifier, permissionType, permissionMask, null);
        }
        
        public void AddPermissionAsync(string objectName, string objectType, string permissionIdentifier, string permissionType, int permissionMask, object userState) {
            if ((this.onBeginAddPermissionDelegate == null)) {
                this.onBeginAddPermissionDelegate = new BeginOperationDelegate(this.OnBeginAddPermission);
            }
            if ((this.onEndAddPermissionDelegate == null)) {
                this.onEndAddPermissionDelegate = new EndOperationDelegate(this.OnEndAddPermission);
            }
            if ((this.onAddPermissionCompletedDelegate == null)) {
                this.onAddPermissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPermissionCompleted);
            }
            base.InvokeAsync(this.onBeginAddPermissionDelegate, new object[] {
                        objectName,
                        objectType,
                        permissionIdentifier,
                        permissionType,
                        permissionMask}, this.onEndAddPermissionDelegate, this.onAddPermissionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Permissions.PermissionsSoap.BeginAddPermissionCollection(WssSVLib.Permissions.AddPermissionCollectionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPermissionCollection(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAddPermissionCollection(string objectName, string objectType, System.Xml.Linq.XElement permissionsInfoXml, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Permissions.AddPermissionCollectionRequest inValue = new WssSVLib.Permissions.AddPermissionCollectionRequest();
            inValue.Body = new WssSVLib.Permissions.AddPermissionCollectionRequestBody();
            inValue.Body.objectName = objectName;
            inValue.Body.objectType = objectType;
            inValue.Body.permissionsInfoXml = permissionsInfoXml;
            return ((WssSVLib.Permissions.PermissionsSoap)(this)).BeginAddPermissionCollection(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Permissions.AddPermissionCollectionResponse WssSVLib.Permissions.PermissionsSoap.EndAddPermissionCollection(System.IAsyncResult result) {
            return base.Channel.EndAddPermissionCollection(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndAddPermissionCollection(System.IAsyncResult result) {
            WssSVLib.Permissions.AddPermissionCollectionResponse retVal = ((WssSVLib.Permissions.PermissionsSoap)(this)).EndAddPermissionCollection(result);
        }
        
        private System.IAsyncResult OnBeginAddPermissionCollection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objectName = ((string)(inValues[0]));
            string objectType = ((string)(inValues[1]));
            System.Xml.Linq.XElement permissionsInfoXml = ((System.Xml.Linq.XElement)(inValues[2]));
            return this.BeginAddPermissionCollection(objectName, objectType, permissionsInfoXml, callback, asyncState);
        }
        
        private object[] OnEndAddPermissionCollection(System.IAsyncResult result) {
            this.EndAddPermissionCollection(result);
            return null;
        }
        
        private void OnAddPermissionCollectionCompleted(object state) {
            if ((this.AddPermissionCollectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPermissionCollectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPermissionCollectionAsync(string objectName, string objectType, System.Xml.Linq.XElement permissionsInfoXml) {
            this.AddPermissionCollectionAsync(objectName, objectType, permissionsInfoXml, null);
        }
        
        public void AddPermissionCollectionAsync(string objectName, string objectType, System.Xml.Linq.XElement permissionsInfoXml, object userState) {
            if ((this.onBeginAddPermissionCollectionDelegate == null)) {
                this.onBeginAddPermissionCollectionDelegate = new BeginOperationDelegate(this.OnBeginAddPermissionCollection);
            }
            if ((this.onEndAddPermissionCollectionDelegate == null)) {
                this.onEndAddPermissionCollectionDelegate = new EndOperationDelegate(this.OnEndAddPermissionCollection);
            }
            if ((this.onAddPermissionCollectionCompletedDelegate == null)) {
                this.onAddPermissionCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPermissionCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginAddPermissionCollectionDelegate, new object[] {
                        objectName,
                        objectType,
                        permissionsInfoXml}, this.onEndAddPermissionCollectionDelegate, this.onAddPermissionCollectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Permissions.PermissionsSoap.BeginUpdatePermission(WssSVLib.Permissions.UpdatePermissionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePermission(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdatePermission(string objectName, string objectType, string permissionIdentifier, string permissionType, int permissionMask, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Permissions.UpdatePermissionRequest inValue = new WssSVLib.Permissions.UpdatePermissionRequest();
            inValue.Body = new WssSVLib.Permissions.UpdatePermissionRequestBody();
            inValue.Body.objectName = objectName;
            inValue.Body.objectType = objectType;
            inValue.Body.permissionIdentifier = permissionIdentifier;
            inValue.Body.permissionType = permissionType;
            inValue.Body.permissionMask = permissionMask;
            return ((WssSVLib.Permissions.PermissionsSoap)(this)).BeginUpdatePermission(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Permissions.UpdatePermissionResponse WssSVLib.Permissions.PermissionsSoap.EndUpdatePermission(System.IAsyncResult result) {
            return base.Channel.EndUpdatePermission(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndUpdatePermission(System.IAsyncResult result) {
            WssSVLib.Permissions.UpdatePermissionResponse retVal = ((WssSVLib.Permissions.PermissionsSoap)(this)).EndUpdatePermission(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePermission(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objectName = ((string)(inValues[0]));
            string objectType = ((string)(inValues[1]));
            string permissionIdentifier = ((string)(inValues[2]));
            string permissionType = ((string)(inValues[3]));
            int permissionMask = ((int)(inValues[4]));
            return this.BeginUpdatePermission(objectName, objectType, permissionIdentifier, permissionType, permissionMask, callback, asyncState);
        }
        
        private object[] OnEndUpdatePermission(System.IAsyncResult result) {
            this.EndUpdatePermission(result);
            return null;
        }
        
        private void OnUpdatePermissionCompleted(object state) {
            if ((this.UpdatePermissionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePermissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePermissionAsync(string objectName, string objectType, string permissionIdentifier, string permissionType, int permissionMask) {
            this.UpdatePermissionAsync(objectName, objectType, permissionIdentifier, permissionType, permissionMask, null);
        }
        
        public void UpdatePermissionAsync(string objectName, string objectType, string permissionIdentifier, string permissionType, int permissionMask, object userState) {
            if ((this.onBeginUpdatePermissionDelegate == null)) {
                this.onBeginUpdatePermissionDelegate = new BeginOperationDelegate(this.OnBeginUpdatePermission);
            }
            if ((this.onEndUpdatePermissionDelegate == null)) {
                this.onEndUpdatePermissionDelegate = new EndOperationDelegate(this.OnEndUpdatePermission);
            }
            if ((this.onUpdatePermissionCompletedDelegate == null)) {
                this.onUpdatePermissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePermissionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePermissionDelegate, new object[] {
                        objectName,
                        objectType,
                        permissionIdentifier,
                        permissionType,
                        permissionMask}, this.onEndUpdatePermissionDelegate, this.onUpdatePermissionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Permissions.PermissionsSoap.BeginRemovePermission(WssSVLib.Permissions.RemovePermissionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemovePermission(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginRemovePermission(string objectName, string objectType, string permissionIdentifier, string permissionType, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Permissions.RemovePermissionRequest inValue = new WssSVLib.Permissions.RemovePermissionRequest();
            inValue.Body = new WssSVLib.Permissions.RemovePermissionRequestBody();
            inValue.Body.objectName = objectName;
            inValue.Body.objectType = objectType;
            inValue.Body.permissionIdentifier = permissionIdentifier;
            inValue.Body.permissionType = permissionType;
            return ((WssSVLib.Permissions.PermissionsSoap)(this)).BeginRemovePermission(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Permissions.RemovePermissionResponse WssSVLib.Permissions.PermissionsSoap.EndRemovePermission(System.IAsyncResult result) {
            return base.Channel.EndRemovePermission(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndRemovePermission(System.IAsyncResult result) {
            WssSVLib.Permissions.RemovePermissionResponse retVal = ((WssSVLib.Permissions.PermissionsSoap)(this)).EndRemovePermission(result);
        }
        
        private System.IAsyncResult OnBeginRemovePermission(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objectName = ((string)(inValues[0]));
            string objectType = ((string)(inValues[1]));
            string permissionIdentifier = ((string)(inValues[2]));
            string permissionType = ((string)(inValues[3]));
            return this.BeginRemovePermission(objectName, objectType, permissionIdentifier, permissionType, callback, asyncState);
        }
        
        private object[] OnEndRemovePermission(System.IAsyncResult result) {
            this.EndRemovePermission(result);
            return null;
        }
        
        private void OnRemovePermissionCompleted(object state) {
            if ((this.RemovePermissionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemovePermissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemovePermissionAsync(string objectName, string objectType, string permissionIdentifier, string permissionType) {
            this.RemovePermissionAsync(objectName, objectType, permissionIdentifier, permissionType, null);
        }
        
        public void RemovePermissionAsync(string objectName, string objectType, string permissionIdentifier, string permissionType, object userState) {
            if ((this.onBeginRemovePermissionDelegate == null)) {
                this.onBeginRemovePermissionDelegate = new BeginOperationDelegate(this.OnBeginRemovePermission);
            }
            if ((this.onEndRemovePermissionDelegate == null)) {
                this.onEndRemovePermissionDelegate = new EndOperationDelegate(this.OnEndRemovePermission);
            }
            if ((this.onRemovePermissionCompletedDelegate == null)) {
                this.onRemovePermissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemovePermissionCompleted);
            }
            base.InvokeAsync(this.onBeginRemovePermissionDelegate, new object[] {
                        objectName,
                        objectType,
                        permissionIdentifier,
                        permissionType}, this.onEndRemovePermissionDelegate, this.onRemovePermissionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Permissions.PermissionsSoap.BeginRemovePermissionCollection(WssSVLib.Permissions.RemovePermissionCollectionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemovePermissionCollection(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginRemovePermissionCollection(string objectName, string objectType, System.Xml.Linq.XElement memberIdsXml, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Permissions.RemovePermissionCollectionRequest inValue = new WssSVLib.Permissions.RemovePermissionCollectionRequest();
            inValue.Body = new WssSVLib.Permissions.RemovePermissionCollectionRequestBody();
            inValue.Body.objectName = objectName;
            inValue.Body.objectType = objectType;
            inValue.Body.memberIdsXml = memberIdsXml;
            return ((WssSVLib.Permissions.PermissionsSoap)(this)).BeginRemovePermissionCollection(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Permissions.RemovePermissionCollectionResponse WssSVLib.Permissions.PermissionsSoap.EndRemovePermissionCollection(System.IAsyncResult result) {
            return base.Channel.EndRemovePermissionCollection(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndRemovePermissionCollection(System.IAsyncResult result) {
            WssSVLib.Permissions.RemovePermissionCollectionResponse retVal = ((WssSVLib.Permissions.PermissionsSoap)(this)).EndRemovePermissionCollection(result);
        }
        
        private System.IAsyncResult OnBeginRemovePermissionCollection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string objectName = ((string)(inValues[0]));
            string objectType = ((string)(inValues[1]));
            System.Xml.Linq.XElement memberIdsXml = ((System.Xml.Linq.XElement)(inValues[2]));
            return this.BeginRemovePermissionCollection(objectName, objectType, memberIdsXml, callback, asyncState);
        }
        
        private object[] OnEndRemovePermissionCollection(System.IAsyncResult result) {
            this.EndRemovePermissionCollection(result);
            return null;
        }
        
        private void OnRemovePermissionCollectionCompleted(object state) {
            if ((this.RemovePermissionCollectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemovePermissionCollectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemovePermissionCollectionAsync(string objectName, string objectType, System.Xml.Linq.XElement memberIdsXml) {
            this.RemovePermissionCollectionAsync(objectName, objectType, memberIdsXml, null);
        }
        
        public void RemovePermissionCollectionAsync(string objectName, string objectType, System.Xml.Linq.XElement memberIdsXml, object userState) {
            if ((this.onBeginRemovePermissionCollectionDelegate == null)) {
                this.onBeginRemovePermissionCollectionDelegate = new BeginOperationDelegate(this.OnBeginRemovePermissionCollection);
            }
            if ((this.onEndRemovePermissionCollectionDelegate == null)) {
                this.onEndRemovePermissionCollectionDelegate = new EndOperationDelegate(this.OnEndRemovePermissionCollection);
            }
            if ((this.onRemovePermissionCollectionCompletedDelegate == null)) {
                this.onRemovePermissionCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemovePermissionCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginRemovePermissionCollectionDelegate, new object[] {
                        objectName,
                        objectType,
                        memberIdsXml}, this.onEndRemovePermissionCollectionDelegate, this.onRemovePermissionCollectionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WssSVLib.Permissions.PermissionsSoap CreateChannel() {
            return new PermissionsSoapClientChannel(this);
        }
        
        private class PermissionsSoapClientChannel : ChannelBase<WssSVLib.Permissions.PermissionsSoap>, WssSVLib.Permissions.PermissionsSoap {
            
            public PermissionsSoapClientChannel(System.ServiceModel.ClientBase<WssSVLib.Permissions.PermissionsSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetPermissionCollection(WssSVLib.Permissions.GetPermissionCollectionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetPermissionCollection", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Permissions.GetPermissionCollectionResponse EndGetPermissionCollection(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Permissions.GetPermissionCollectionResponse _result = ((WssSVLib.Permissions.GetPermissionCollectionResponse)(base.EndInvoke("GetPermissionCollection", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddPermission(WssSVLib.Permissions.AddPermissionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AddPermission", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Permissions.AddPermissionResponse EndAddPermission(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Permissions.AddPermissionResponse _result = ((WssSVLib.Permissions.AddPermissionResponse)(base.EndInvoke("AddPermission", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddPermissionCollection(WssSVLib.Permissions.AddPermissionCollectionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AddPermissionCollection", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Permissions.AddPermissionCollectionResponse EndAddPermissionCollection(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Permissions.AddPermissionCollectionResponse _result = ((WssSVLib.Permissions.AddPermissionCollectionResponse)(base.EndInvoke("AddPermissionCollection", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePermission(WssSVLib.Permissions.UpdatePermissionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePermission", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Permissions.UpdatePermissionResponse EndUpdatePermission(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Permissions.UpdatePermissionResponse _result = ((WssSVLib.Permissions.UpdatePermissionResponse)(base.EndInvoke("UpdatePermission", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemovePermission(WssSVLib.Permissions.RemovePermissionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("RemovePermission", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Permissions.RemovePermissionResponse EndRemovePermission(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Permissions.RemovePermissionResponse _result = ((WssSVLib.Permissions.RemovePermissionResponse)(base.EndInvoke("RemovePermission", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemovePermissionCollection(WssSVLib.Permissions.RemovePermissionCollectionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("RemovePermissionCollection", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Permissions.RemovePermissionCollectionResponse EndRemovePermissionCollection(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Permissions.RemovePermissionCollectionResponse _result = ((WssSVLib.Permissions.RemovePermissionCollectionResponse)(base.EndInvoke("RemovePermissionCollection", _args, result)));
                return _result;
            }
        }
    }
}

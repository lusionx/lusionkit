//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace WssSVLib.Views {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", ConfigurationName="Views.ViewsSoap")]
    public interface ViewsSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/GetView", ReplyAction="*")]
        System.IAsyncResult BeginGetView(WssSVLib.Views.GetViewRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Views.GetViewResponse EndGetView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/GetViewHtml", ReplyAction="*")]
        System.IAsyncResult BeginGetViewHtml(WssSVLib.Views.GetViewHtmlRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Views.GetViewHtmlResponse EndGetViewHtml(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/DeleteView", ReplyAction="*")]
        System.IAsyncResult BeginDeleteView(WssSVLib.Views.DeleteViewRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Views.DeleteViewResponse EndDeleteView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/AddView", ReplyAction="*")]
        System.IAsyncResult BeginAddView(WssSVLib.Views.AddViewRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Views.AddViewResponse EndAddView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/GetViewCollection", ReplyAction="*")]
        System.IAsyncResult BeginGetViewCollection(WssSVLib.Views.GetViewCollectionRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Views.GetViewCollectionResponse EndGetViewCollection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/UpdateView", ReplyAction="*")]
        System.IAsyncResult BeginUpdateView(WssSVLib.Views.UpdateViewRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Views.UpdateViewResponse EndUpdateView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/UpdateViewHtml", ReplyAction="*")]
        System.IAsyncResult BeginUpdateViewHtml(WssSVLib.Views.UpdateViewHtmlRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Views.UpdateViewHtmlResponse EndUpdateViewHtml(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/UpdateViewHtml2", ReplyAction="*")]
        System.IAsyncResult BeginUpdateViewHtml2(WssSVLib.Views.UpdateViewHtml2Request request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Views.UpdateViewHtml2Response EndUpdateViewHtml2(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetViewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetView", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.GetViewRequestBody Body;
        
        public GetViewRequest() {
        }
        
        public GetViewRequest(WssSVLib.Views.GetViewRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class GetViewRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string listName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string viewName;
        
        public GetViewRequestBody() {
        }
        
        public GetViewRequestBody(string listName, string viewName) {
            this.listName = listName;
            this.viewName = viewName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetViewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetViewResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.GetViewResponseBody Body;
        
        public GetViewResponse() {
        }
        
        public GetViewResponse(WssSVLib.Views.GetViewResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class GetViewResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement GetViewResult;
        
        public GetViewResponseBody() {
        }
        
        public GetViewResponseBody(System.Xml.Linq.XElement GetViewResult) {
            this.GetViewResult = GetViewResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetViewHtmlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetViewHtml", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.GetViewHtmlRequestBody Body;
        
        public GetViewHtmlRequest() {
        }
        
        public GetViewHtmlRequest(WssSVLib.Views.GetViewHtmlRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class GetViewHtmlRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string listName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string viewName;
        
        public GetViewHtmlRequestBody() {
        }
        
        public GetViewHtmlRequestBody(string listName, string viewName) {
            this.listName = listName;
            this.viewName = viewName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetViewHtmlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetViewHtmlResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.GetViewHtmlResponseBody Body;
        
        public GetViewHtmlResponse() {
        }
        
        public GetViewHtmlResponse(WssSVLib.Views.GetViewHtmlResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class GetViewHtmlResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement GetViewHtmlResult;
        
        public GetViewHtmlResponseBody() {
        }
        
        public GetViewHtmlResponseBody(System.Xml.Linq.XElement GetViewHtmlResult) {
            this.GetViewHtmlResult = GetViewHtmlResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteViewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteView", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.DeleteViewRequestBody Body;
        
        public DeleteViewRequest() {
        }
        
        public DeleteViewRequest(WssSVLib.Views.DeleteViewRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class DeleteViewRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string listName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string viewName;
        
        public DeleteViewRequestBody() {
        }
        
        public DeleteViewRequestBody(string listName, string viewName) {
            this.listName = listName;
            this.viewName = viewName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteViewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteViewResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.DeleteViewResponseBody Body;
        
        public DeleteViewResponse() {
        }
        
        public DeleteViewResponse(WssSVLib.Views.DeleteViewResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class DeleteViewResponseBody {
        
        public DeleteViewResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddViewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddView", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.AddViewRequestBody Body;
        
        public AddViewRequest() {
        }
        
        public AddViewRequest(WssSVLib.Views.AddViewRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class AddViewRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string listName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string viewName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.Linq.XElement viewFields;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.Linq.XElement query;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Xml.Linq.XElement rowLimit;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string type;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool makeViewDefault;
        
        public AddViewRequestBody() {
        }
        
        public AddViewRequestBody(string listName, string viewName, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement query, System.Xml.Linq.XElement rowLimit, string type, bool makeViewDefault) {
            this.listName = listName;
            this.viewName = viewName;
            this.viewFields = viewFields;
            this.query = query;
            this.rowLimit = rowLimit;
            this.type = type;
            this.makeViewDefault = makeViewDefault;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddViewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddViewResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.AddViewResponseBody Body;
        
        public AddViewResponse() {
        }
        
        public AddViewResponse(WssSVLib.Views.AddViewResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class AddViewResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement AddViewResult;
        
        public AddViewResponseBody() {
        }
        
        public AddViewResponseBody(System.Xml.Linq.XElement AddViewResult) {
            this.AddViewResult = AddViewResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetViewCollectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetViewCollection", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.GetViewCollectionRequestBody Body;
        
        public GetViewCollectionRequest() {
        }
        
        public GetViewCollectionRequest(WssSVLib.Views.GetViewCollectionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class GetViewCollectionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string listName;
        
        public GetViewCollectionRequestBody() {
        }
        
        public GetViewCollectionRequestBody(string listName) {
            this.listName = listName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetViewCollectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetViewCollectionResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.GetViewCollectionResponseBody Body;
        
        public GetViewCollectionResponse() {
        }
        
        public GetViewCollectionResponse(WssSVLib.Views.GetViewCollectionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class GetViewCollectionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement GetViewCollectionResult;
        
        public GetViewCollectionResponseBody() {
        }
        
        public GetViewCollectionResponseBody(System.Xml.Linq.XElement GetViewCollectionResult) {
            this.GetViewCollectionResult = GetViewCollectionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateViewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateView", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.UpdateViewRequestBody Body;
        
        public UpdateViewRequest() {
        }
        
        public UpdateViewRequest(WssSVLib.Views.UpdateViewRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class UpdateViewRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string listName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string viewName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.Linq.XElement viewProperties;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.Linq.XElement query;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Xml.Linq.XElement viewFields;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Xml.Linq.XElement aggregations;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Xml.Linq.XElement formats;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Xml.Linq.XElement rowLimit;
        
        public UpdateViewRequestBody() {
        }
        
        public UpdateViewRequestBody(string listName, string viewName, System.Xml.Linq.XElement viewProperties, System.Xml.Linq.XElement query, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement aggregations, System.Xml.Linq.XElement formats, System.Xml.Linq.XElement rowLimit) {
            this.listName = listName;
            this.viewName = viewName;
            this.viewProperties = viewProperties;
            this.query = query;
            this.viewFields = viewFields;
            this.aggregations = aggregations;
            this.formats = formats;
            this.rowLimit = rowLimit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateViewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateViewResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.UpdateViewResponseBody Body;
        
        public UpdateViewResponse() {
        }
        
        public UpdateViewResponse(WssSVLib.Views.UpdateViewResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class UpdateViewResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement UpdateViewResult;
        
        public UpdateViewResponseBody() {
        }
        
        public UpdateViewResponseBody(System.Xml.Linq.XElement UpdateViewResult) {
            this.UpdateViewResult = UpdateViewResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateViewHtmlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateViewHtml", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.UpdateViewHtmlRequestBody Body;
        
        public UpdateViewHtmlRequest() {
        }
        
        public UpdateViewHtmlRequest(WssSVLib.Views.UpdateViewHtmlRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class UpdateViewHtmlRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string listName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string viewName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.Linq.XElement viewProperties;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.Linq.XElement toolbar;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Xml.Linq.XElement viewHeader;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Xml.Linq.XElement viewBody;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Xml.Linq.XElement viewFooter;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Xml.Linq.XElement viewEmpty;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public System.Xml.Linq.XElement rowLimitExceeded;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public System.Xml.Linq.XElement query;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public System.Xml.Linq.XElement viewFields;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public System.Xml.Linq.XElement aggregations;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public System.Xml.Linq.XElement formats;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public System.Xml.Linq.XElement rowLimit;
        
        public UpdateViewHtmlRequestBody() {
        }
        
        public UpdateViewHtmlRequestBody(string listName, string viewName, System.Xml.Linq.XElement viewProperties, System.Xml.Linq.XElement toolbar, System.Xml.Linq.XElement viewHeader, System.Xml.Linq.XElement viewBody, System.Xml.Linq.XElement viewFooter, System.Xml.Linq.XElement viewEmpty, System.Xml.Linq.XElement rowLimitExceeded, System.Xml.Linq.XElement query, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement aggregations, System.Xml.Linq.XElement formats, System.Xml.Linq.XElement rowLimit) {
            this.listName = listName;
            this.viewName = viewName;
            this.viewProperties = viewProperties;
            this.toolbar = toolbar;
            this.viewHeader = viewHeader;
            this.viewBody = viewBody;
            this.viewFooter = viewFooter;
            this.viewEmpty = viewEmpty;
            this.rowLimitExceeded = rowLimitExceeded;
            this.query = query;
            this.viewFields = viewFields;
            this.aggregations = aggregations;
            this.formats = formats;
            this.rowLimit = rowLimit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateViewHtmlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateViewHtmlResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.UpdateViewHtmlResponseBody Body;
        
        public UpdateViewHtmlResponse() {
        }
        
        public UpdateViewHtmlResponse(WssSVLib.Views.UpdateViewHtmlResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class UpdateViewHtmlResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement UpdateViewHtmlResult;
        
        public UpdateViewHtmlResponseBody() {
        }
        
        public UpdateViewHtmlResponseBody(System.Xml.Linq.XElement UpdateViewHtmlResult) {
            this.UpdateViewHtmlResult = UpdateViewHtmlResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateViewHtml2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateViewHtml2", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.UpdateViewHtml2RequestBody Body;
        
        public UpdateViewHtml2Request() {
        }
        
        public UpdateViewHtml2Request(WssSVLib.Views.UpdateViewHtml2RequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class UpdateViewHtml2RequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string listName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string viewName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.Linq.XElement viewProperties;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.Linq.XElement toolbar;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Xml.Linq.XElement viewHeader;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Xml.Linq.XElement viewBody;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Xml.Linq.XElement viewFooter;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Xml.Linq.XElement viewEmpty;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public System.Xml.Linq.XElement rowLimitExceeded;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public System.Xml.Linq.XElement query;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public System.Xml.Linq.XElement viewFields;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public System.Xml.Linq.XElement aggregations;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public System.Xml.Linq.XElement formats;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public System.Xml.Linq.XElement rowLimit;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string openApplicationExtension;
        
        public UpdateViewHtml2RequestBody() {
        }
        
        public UpdateViewHtml2RequestBody(string listName, string viewName, System.Xml.Linq.XElement viewProperties, System.Xml.Linq.XElement toolbar, System.Xml.Linq.XElement viewHeader, System.Xml.Linq.XElement viewBody, System.Xml.Linq.XElement viewFooter, System.Xml.Linq.XElement viewEmpty, System.Xml.Linq.XElement rowLimitExceeded, System.Xml.Linq.XElement query, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement aggregations, System.Xml.Linq.XElement formats, System.Xml.Linq.XElement rowLimit, string openApplicationExtension) {
            this.listName = listName;
            this.viewName = viewName;
            this.viewProperties = viewProperties;
            this.toolbar = toolbar;
            this.viewHeader = viewHeader;
            this.viewBody = viewBody;
            this.viewFooter = viewFooter;
            this.viewEmpty = viewEmpty;
            this.rowLimitExceeded = rowLimitExceeded;
            this.query = query;
            this.viewFields = viewFields;
            this.aggregations = aggregations;
            this.formats = formats;
            this.rowLimit = rowLimit;
            this.openApplicationExtension = openApplicationExtension;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateViewHtml2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateViewHtml2Response", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Views.UpdateViewHtml2ResponseBody Body;
        
        public UpdateViewHtml2Response() {
        }
        
        public UpdateViewHtml2Response(WssSVLib.Views.UpdateViewHtml2ResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class UpdateViewHtml2ResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement UpdateViewHtml2Result;
        
        public UpdateViewHtml2ResponseBody() {
        }
        
        public UpdateViewHtml2ResponseBody(System.Xml.Linq.XElement UpdateViewHtml2Result) {
            this.UpdateViewHtml2Result = UpdateViewHtml2Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ViewsSoapChannel : WssSVLib.Views.ViewsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetViewHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetViewHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AddViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetViewCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetViewCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateViewHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateViewHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateViewHtml2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateViewHtml2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ViewsSoapClient : System.ServiceModel.ClientBase<WssSVLib.Views.ViewsSoap>, WssSVLib.Views.ViewsSoap {
        
        private BeginOperationDelegate onBeginGetViewDelegate;
        
        private EndOperationDelegate onEndGetViewDelegate;
        
        private System.Threading.SendOrPostCallback onGetViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetViewHtmlDelegate;
        
        private EndOperationDelegate onEndGetViewHtmlDelegate;
        
        private System.Threading.SendOrPostCallback onGetViewHtmlCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteViewDelegate;
        
        private EndOperationDelegate onEndDeleteViewDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddViewDelegate;
        
        private EndOperationDelegate onEndAddViewDelegate;
        
        private System.Threading.SendOrPostCallback onAddViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetViewCollectionDelegate;
        
        private EndOperationDelegate onEndGetViewCollectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetViewCollectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateViewDelegate;
        
        private EndOperationDelegate onEndUpdateViewDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateViewHtmlDelegate;
        
        private EndOperationDelegate onEndUpdateViewHtmlDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateViewHtmlCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateViewHtml2Delegate;
        
        private EndOperationDelegate onEndUpdateViewHtml2Delegate;
        
        private System.Threading.SendOrPostCallback onUpdateViewHtml2CompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ViewsSoapClient() {
        }
        
        public ViewsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ViewsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ViewsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ViewsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetViewCompletedEventArgs> GetViewCompleted;
        
        public event System.EventHandler<GetViewHtmlCompletedEventArgs> GetViewHtmlCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteViewCompleted;
        
        public event System.EventHandler<AddViewCompletedEventArgs> AddViewCompleted;
        
        public event System.EventHandler<GetViewCollectionCompletedEventArgs> GetViewCollectionCompleted;
        
        public event System.EventHandler<UpdateViewCompletedEventArgs> UpdateViewCompleted;
        
        public event System.EventHandler<UpdateViewHtmlCompletedEventArgs> UpdateViewHtmlCompleted;
        
        public event System.EventHandler<UpdateViewHtml2CompletedEventArgs> UpdateViewHtml2Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Views.ViewsSoap.BeginGetView(WssSVLib.Views.GetViewRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetView(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetView(string listName, string viewName, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Views.GetViewRequest inValue = new WssSVLib.Views.GetViewRequest();
            inValue.Body = new WssSVLib.Views.GetViewRequestBody();
            inValue.Body.listName = listName;
            inValue.Body.viewName = viewName;
            return ((WssSVLib.Views.ViewsSoap)(this)).BeginGetView(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Views.GetViewResponse WssSVLib.Views.ViewsSoap.EndGetView(System.IAsyncResult result) {
            return base.Channel.EndGetView(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndGetView(System.IAsyncResult result) {
            WssSVLib.Views.GetViewResponse retVal = ((WssSVLib.Views.ViewsSoap)(this)).EndGetView(result);
            return retVal.Body.GetViewResult;
        }
        
        private System.IAsyncResult OnBeginGetView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string listName = ((string)(inValues[0]));
            string viewName = ((string)(inValues[1]));
            return this.BeginGetView(listName, viewName, callback, asyncState);
        }
        
        private object[] OnEndGetView(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndGetView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetViewCompleted(object state) {
            if ((this.GetViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetViewCompleted(this, new GetViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetViewAsync(string listName, string viewName) {
            this.GetViewAsync(listName, viewName, null);
        }
        
        public void GetViewAsync(string listName, string viewName, object userState) {
            if ((this.onBeginGetViewDelegate == null)) {
                this.onBeginGetViewDelegate = new BeginOperationDelegate(this.OnBeginGetView);
            }
            if ((this.onEndGetViewDelegate == null)) {
                this.onEndGetViewDelegate = new EndOperationDelegate(this.OnEndGetView);
            }
            if ((this.onGetViewCompletedDelegate == null)) {
                this.onGetViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetViewCompleted);
            }
            base.InvokeAsync(this.onBeginGetViewDelegate, new object[] {
                        listName,
                        viewName}, this.onEndGetViewDelegate, this.onGetViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Views.ViewsSoap.BeginGetViewHtml(WssSVLib.Views.GetViewHtmlRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetViewHtml(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetViewHtml(string listName, string viewName, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Views.GetViewHtmlRequest inValue = new WssSVLib.Views.GetViewHtmlRequest();
            inValue.Body = new WssSVLib.Views.GetViewHtmlRequestBody();
            inValue.Body.listName = listName;
            inValue.Body.viewName = viewName;
            return ((WssSVLib.Views.ViewsSoap)(this)).BeginGetViewHtml(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Views.GetViewHtmlResponse WssSVLib.Views.ViewsSoap.EndGetViewHtml(System.IAsyncResult result) {
            return base.Channel.EndGetViewHtml(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndGetViewHtml(System.IAsyncResult result) {
            WssSVLib.Views.GetViewHtmlResponse retVal = ((WssSVLib.Views.ViewsSoap)(this)).EndGetViewHtml(result);
            return retVal.Body.GetViewHtmlResult;
        }
        
        private System.IAsyncResult OnBeginGetViewHtml(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string listName = ((string)(inValues[0]));
            string viewName = ((string)(inValues[1]));
            return this.BeginGetViewHtml(listName, viewName, callback, asyncState);
        }
        
        private object[] OnEndGetViewHtml(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndGetViewHtml(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetViewHtmlCompleted(object state) {
            if ((this.GetViewHtmlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetViewHtmlCompleted(this, new GetViewHtmlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetViewHtmlAsync(string listName, string viewName) {
            this.GetViewHtmlAsync(listName, viewName, null);
        }
        
        public void GetViewHtmlAsync(string listName, string viewName, object userState) {
            if ((this.onBeginGetViewHtmlDelegate == null)) {
                this.onBeginGetViewHtmlDelegate = new BeginOperationDelegate(this.OnBeginGetViewHtml);
            }
            if ((this.onEndGetViewHtmlDelegate == null)) {
                this.onEndGetViewHtmlDelegate = new EndOperationDelegate(this.OnEndGetViewHtml);
            }
            if ((this.onGetViewHtmlCompletedDelegate == null)) {
                this.onGetViewHtmlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetViewHtmlCompleted);
            }
            base.InvokeAsync(this.onBeginGetViewHtmlDelegate, new object[] {
                        listName,
                        viewName}, this.onEndGetViewHtmlDelegate, this.onGetViewHtmlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Views.ViewsSoap.BeginDeleteView(WssSVLib.Views.DeleteViewRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteView(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDeleteView(string listName, string viewName, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Views.DeleteViewRequest inValue = new WssSVLib.Views.DeleteViewRequest();
            inValue.Body = new WssSVLib.Views.DeleteViewRequestBody();
            inValue.Body.listName = listName;
            inValue.Body.viewName = viewName;
            return ((WssSVLib.Views.ViewsSoap)(this)).BeginDeleteView(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Views.DeleteViewResponse WssSVLib.Views.ViewsSoap.EndDeleteView(System.IAsyncResult result) {
            return base.Channel.EndDeleteView(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndDeleteView(System.IAsyncResult result) {
            WssSVLib.Views.DeleteViewResponse retVal = ((WssSVLib.Views.ViewsSoap)(this)).EndDeleteView(result);
        }
        
        private System.IAsyncResult OnBeginDeleteView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string listName = ((string)(inValues[0]));
            string viewName = ((string)(inValues[1]));
            return this.BeginDeleteView(listName, viewName, callback, asyncState);
        }
        
        private object[] OnEndDeleteView(System.IAsyncResult result) {
            this.EndDeleteView(result);
            return null;
        }
        
        private void OnDeleteViewCompleted(object state) {
            if ((this.DeleteViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteViewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteViewAsync(string listName, string viewName) {
            this.DeleteViewAsync(listName, viewName, null);
        }
        
        public void DeleteViewAsync(string listName, string viewName, object userState) {
            if ((this.onBeginDeleteViewDelegate == null)) {
                this.onBeginDeleteViewDelegate = new BeginOperationDelegate(this.OnBeginDeleteView);
            }
            if ((this.onEndDeleteViewDelegate == null)) {
                this.onEndDeleteViewDelegate = new EndOperationDelegate(this.OnEndDeleteView);
            }
            if ((this.onDeleteViewCompletedDelegate == null)) {
                this.onDeleteViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteViewCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteViewDelegate, new object[] {
                        listName,
                        viewName}, this.onEndDeleteViewDelegate, this.onDeleteViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Views.ViewsSoap.BeginAddView(WssSVLib.Views.AddViewRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddView(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAddView(string listName, string viewName, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement query, System.Xml.Linq.XElement rowLimit, string type, bool makeViewDefault, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Views.AddViewRequest inValue = new WssSVLib.Views.AddViewRequest();
            inValue.Body = new WssSVLib.Views.AddViewRequestBody();
            inValue.Body.listName = listName;
            inValue.Body.viewName = viewName;
            inValue.Body.viewFields = viewFields;
            inValue.Body.query = query;
            inValue.Body.rowLimit = rowLimit;
            inValue.Body.type = type;
            inValue.Body.makeViewDefault = makeViewDefault;
            return ((WssSVLib.Views.ViewsSoap)(this)).BeginAddView(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Views.AddViewResponse WssSVLib.Views.ViewsSoap.EndAddView(System.IAsyncResult result) {
            return base.Channel.EndAddView(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndAddView(System.IAsyncResult result) {
            WssSVLib.Views.AddViewResponse retVal = ((WssSVLib.Views.ViewsSoap)(this)).EndAddView(result);
            return retVal.Body.AddViewResult;
        }
        
        private System.IAsyncResult OnBeginAddView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string listName = ((string)(inValues[0]));
            string viewName = ((string)(inValues[1]));
            System.Xml.Linq.XElement viewFields = ((System.Xml.Linq.XElement)(inValues[2]));
            System.Xml.Linq.XElement query = ((System.Xml.Linq.XElement)(inValues[3]));
            System.Xml.Linq.XElement rowLimit = ((System.Xml.Linq.XElement)(inValues[4]));
            string type = ((string)(inValues[5]));
            bool makeViewDefault = ((bool)(inValues[6]));
            return this.BeginAddView(listName, viewName, viewFields, query, rowLimit, type, makeViewDefault, callback, asyncState);
        }
        
        private object[] OnEndAddView(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndAddView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddViewCompleted(object state) {
            if ((this.AddViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddViewCompleted(this, new AddViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddViewAsync(string listName, string viewName, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement query, System.Xml.Linq.XElement rowLimit, string type, bool makeViewDefault) {
            this.AddViewAsync(listName, viewName, viewFields, query, rowLimit, type, makeViewDefault, null);
        }
        
        public void AddViewAsync(string listName, string viewName, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement query, System.Xml.Linq.XElement rowLimit, string type, bool makeViewDefault, object userState) {
            if ((this.onBeginAddViewDelegate == null)) {
                this.onBeginAddViewDelegate = new BeginOperationDelegate(this.OnBeginAddView);
            }
            if ((this.onEndAddViewDelegate == null)) {
                this.onEndAddViewDelegate = new EndOperationDelegate(this.OnEndAddView);
            }
            if ((this.onAddViewCompletedDelegate == null)) {
                this.onAddViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddViewCompleted);
            }
            base.InvokeAsync(this.onBeginAddViewDelegate, new object[] {
                        listName,
                        viewName,
                        viewFields,
                        query,
                        rowLimit,
                        type,
                        makeViewDefault}, this.onEndAddViewDelegate, this.onAddViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Views.ViewsSoap.BeginGetViewCollection(WssSVLib.Views.GetViewCollectionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetViewCollection(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetViewCollection(string listName, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Views.GetViewCollectionRequest inValue = new WssSVLib.Views.GetViewCollectionRequest();
            inValue.Body = new WssSVLib.Views.GetViewCollectionRequestBody();
            inValue.Body.listName = listName;
            return ((WssSVLib.Views.ViewsSoap)(this)).BeginGetViewCollection(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Views.GetViewCollectionResponse WssSVLib.Views.ViewsSoap.EndGetViewCollection(System.IAsyncResult result) {
            return base.Channel.EndGetViewCollection(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndGetViewCollection(System.IAsyncResult result) {
            WssSVLib.Views.GetViewCollectionResponse retVal = ((WssSVLib.Views.ViewsSoap)(this)).EndGetViewCollection(result);
            return retVal.Body.GetViewCollectionResult;
        }
        
        private System.IAsyncResult OnBeginGetViewCollection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string listName = ((string)(inValues[0]));
            return this.BeginGetViewCollection(listName, callback, asyncState);
        }
        
        private object[] OnEndGetViewCollection(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndGetViewCollection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetViewCollectionCompleted(object state) {
            if ((this.GetViewCollectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetViewCollectionCompleted(this, new GetViewCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetViewCollectionAsync(string listName) {
            this.GetViewCollectionAsync(listName, null);
        }
        
        public void GetViewCollectionAsync(string listName, object userState) {
            if ((this.onBeginGetViewCollectionDelegate == null)) {
                this.onBeginGetViewCollectionDelegate = new BeginOperationDelegate(this.OnBeginGetViewCollection);
            }
            if ((this.onEndGetViewCollectionDelegate == null)) {
                this.onEndGetViewCollectionDelegate = new EndOperationDelegate(this.OnEndGetViewCollection);
            }
            if ((this.onGetViewCollectionCompletedDelegate == null)) {
                this.onGetViewCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetViewCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetViewCollectionDelegate, new object[] {
                        listName}, this.onEndGetViewCollectionDelegate, this.onGetViewCollectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Views.ViewsSoap.BeginUpdateView(WssSVLib.Views.UpdateViewRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateView(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdateView(string listName, string viewName, System.Xml.Linq.XElement viewProperties, System.Xml.Linq.XElement query, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement aggregations, System.Xml.Linq.XElement formats, System.Xml.Linq.XElement rowLimit, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Views.UpdateViewRequest inValue = new WssSVLib.Views.UpdateViewRequest();
            inValue.Body = new WssSVLib.Views.UpdateViewRequestBody();
            inValue.Body.listName = listName;
            inValue.Body.viewName = viewName;
            inValue.Body.viewProperties = viewProperties;
            inValue.Body.query = query;
            inValue.Body.viewFields = viewFields;
            inValue.Body.aggregations = aggregations;
            inValue.Body.formats = formats;
            inValue.Body.rowLimit = rowLimit;
            return ((WssSVLib.Views.ViewsSoap)(this)).BeginUpdateView(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Views.UpdateViewResponse WssSVLib.Views.ViewsSoap.EndUpdateView(System.IAsyncResult result) {
            return base.Channel.EndUpdateView(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndUpdateView(System.IAsyncResult result) {
            WssSVLib.Views.UpdateViewResponse retVal = ((WssSVLib.Views.ViewsSoap)(this)).EndUpdateView(result);
            return retVal.Body.UpdateViewResult;
        }
        
        private System.IAsyncResult OnBeginUpdateView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string listName = ((string)(inValues[0]));
            string viewName = ((string)(inValues[1]));
            System.Xml.Linq.XElement viewProperties = ((System.Xml.Linq.XElement)(inValues[2]));
            System.Xml.Linq.XElement query = ((System.Xml.Linq.XElement)(inValues[3]));
            System.Xml.Linq.XElement viewFields = ((System.Xml.Linq.XElement)(inValues[4]));
            System.Xml.Linq.XElement aggregations = ((System.Xml.Linq.XElement)(inValues[5]));
            System.Xml.Linq.XElement formats = ((System.Xml.Linq.XElement)(inValues[6]));
            System.Xml.Linq.XElement rowLimit = ((System.Xml.Linq.XElement)(inValues[7]));
            return this.BeginUpdateView(listName, viewName, viewProperties, query, viewFields, aggregations, formats, rowLimit, callback, asyncState);
        }
        
        private object[] OnEndUpdateView(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndUpdateView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateViewCompleted(object state) {
            if ((this.UpdateViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateViewCompleted(this, new UpdateViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateViewAsync(string listName, string viewName, System.Xml.Linq.XElement viewProperties, System.Xml.Linq.XElement query, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement aggregations, System.Xml.Linq.XElement formats, System.Xml.Linq.XElement rowLimit) {
            this.UpdateViewAsync(listName, viewName, viewProperties, query, viewFields, aggregations, formats, rowLimit, null);
        }
        
        public void UpdateViewAsync(string listName, string viewName, System.Xml.Linq.XElement viewProperties, System.Xml.Linq.XElement query, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement aggregations, System.Xml.Linq.XElement formats, System.Xml.Linq.XElement rowLimit, object userState) {
            if ((this.onBeginUpdateViewDelegate == null)) {
                this.onBeginUpdateViewDelegate = new BeginOperationDelegate(this.OnBeginUpdateView);
            }
            if ((this.onEndUpdateViewDelegate == null)) {
                this.onEndUpdateViewDelegate = new EndOperationDelegate(this.OnEndUpdateView);
            }
            if ((this.onUpdateViewCompletedDelegate == null)) {
                this.onUpdateViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateViewCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateViewDelegate, new object[] {
                        listName,
                        viewName,
                        viewProperties,
                        query,
                        viewFields,
                        aggregations,
                        formats,
                        rowLimit}, this.onEndUpdateViewDelegate, this.onUpdateViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Views.ViewsSoap.BeginUpdateViewHtml(WssSVLib.Views.UpdateViewHtmlRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateViewHtml(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdateViewHtml(
                    string listName, 
                    string viewName, 
                    System.Xml.Linq.XElement viewProperties, 
                    System.Xml.Linq.XElement toolbar, 
                    System.Xml.Linq.XElement viewHeader, 
                    System.Xml.Linq.XElement viewBody, 
                    System.Xml.Linq.XElement viewFooter, 
                    System.Xml.Linq.XElement viewEmpty, 
                    System.Xml.Linq.XElement rowLimitExceeded, 
                    System.Xml.Linq.XElement query, 
                    System.Xml.Linq.XElement viewFields, 
                    System.Xml.Linq.XElement aggregations, 
                    System.Xml.Linq.XElement formats, 
                    System.Xml.Linq.XElement rowLimit, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            WssSVLib.Views.UpdateViewHtmlRequest inValue = new WssSVLib.Views.UpdateViewHtmlRequest();
            inValue.Body = new WssSVLib.Views.UpdateViewHtmlRequestBody();
            inValue.Body.listName = listName;
            inValue.Body.viewName = viewName;
            inValue.Body.viewProperties = viewProperties;
            inValue.Body.toolbar = toolbar;
            inValue.Body.viewHeader = viewHeader;
            inValue.Body.viewBody = viewBody;
            inValue.Body.viewFooter = viewFooter;
            inValue.Body.viewEmpty = viewEmpty;
            inValue.Body.rowLimitExceeded = rowLimitExceeded;
            inValue.Body.query = query;
            inValue.Body.viewFields = viewFields;
            inValue.Body.aggregations = aggregations;
            inValue.Body.formats = formats;
            inValue.Body.rowLimit = rowLimit;
            return ((WssSVLib.Views.ViewsSoap)(this)).BeginUpdateViewHtml(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Views.UpdateViewHtmlResponse WssSVLib.Views.ViewsSoap.EndUpdateViewHtml(System.IAsyncResult result) {
            return base.Channel.EndUpdateViewHtml(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndUpdateViewHtml(System.IAsyncResult result) {
            WssSVLib.Views.UpdateViewHtmlResponse retVal = ((WssSVLib.Views.ViewsSoap)(this)).EndUpdateViewHtml(result);
            return retVal.Body.UpdateViewHtmlResult;
        }
        
        private System.IAsyncResult OnBeginUpdateViewHtml(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string listName = ((string)(inValues[0]));
            string viewName = ((string)(inValues[1]));
            System.Xml.Linq.XElement viewProperties = ((System.Xml.Linq.XElement)(inValues[2]));
            System.Xml.Linq.XElement toolbar = ((System.Xml.Linq.XElement)(inValues[3]));
            System.Xml.Linq.XElement viewHeader = ((System.Xml.Linq.XElement)(inValues[4]));
            System.Xml.Linq.XElement viewBody = ((System.Xml.Linq.XElement)(inValues[5]));
            System.Xml.Linq.XElement viewFooter = ((System.Xml.Linq.XElement)(inValues[6]));
            System.Xml.Linq.XElement viewEmpty = ((System.Xml.Linq.XElement)(inValues[7]));
            System.Xml.Linq.XElement rowLimitExceeded = ((System.Xml.Linq.XElement)(inValues[8]));
            System.Xml.Linq.XElement query = ((System.Xml.Linq.XElement)(inValues[9]));
            System.Xml.Linq.XElement viewFields = ((System.Xml.Linq.XElement)(inValues[10]));
            System.Xml.Linq.XElement aggregations = ((System.Xml.Linq.XElement)(inValues[11]));
            System.Xml.Linq.XElement formats = ((System.Xml.Linq.XElement)(inValues[12]));
            System.Xml.Linq.XElement rowLimit = ((System.Xml.Linq.XElement)(inValues[13]));
            return this.BeginUpdateViewHtml(listName, viewName, viewProperties, toolbar, viewHeader, viewBody, viewFooter, viewEmpty, rowLimitExceeded, query, viewFields, aggregations, formats, rowLimit, callback, asyncState);
        }
        
        private object[] OnEndUpdateViewHtml(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndUpdateViewHtml(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateViewHtmlCompleted(object state) {
            if ((this.UpdateViewHtmlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateViewHtmlCompleted(this, new UpdateViewHtmlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateViewHtmlAsync(string listName, string viewName, System.Xml.Linq.XElement viewProperties, System.Xml.Linq.XElement toolbar, System.Xml.Linq.XElement viewHeader, System.Xml.Linq.XElement viewBody, System.Xml.Linq.XElement viewFooter, System.Xml.Linq.XElement viewEmpty, System.Xml.Linq.XElement rowLimitExceeded, System.Xml.Linq.XElement query, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement aggregations, System.Xml.Linq.XElement formats, System.Xml.Linq.XElement rowLimit) {
            this.UpdateViewHtmlAsync(listName, viewName, viewProperties, toolbar, viewHeader, viewBody, viewFooter, viewEmpty, rowLimitExceeded, query, viewFields, aggregations, formats, rowLimit, null);
        }
        
        public void UpdateViewHtmlAsync(string listName, string viewName, System.Xml.Linq.XElement viewProperties, System.Xml.Linq.XElement toolbar, System.Xml.Linq.XElement viewHeader, System.Xml.Linq.XElement viewBody, System.Xml.Linq.XElement viewFooter, System.Xml.Linq.XElement viewEmpty, System.Xml.Linq.XElement rowLimitExceeded, System.Xml.Linq.XElement query, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement aggregations, System.Xml.Linq.XElement formats, System.Xml.Linq.XElement rowLimit, object userState) {
            if ((this.onBeginUpdateViewHtmlDelegate == null)) {
                this.onBeginUpdateViewHtmlDelegate = new BeginOperationDelegate(this.OnBeginUpdateViewHtml);
            }
            if ((this.onEndUpdateViewHtmlDelegate == null)) {
                this.onEndUpdateViewHtmlDelegate = new EndOperationDelegate(this.OnEndUpdateViewHtml);
            }
            if ((this.onUpdateViewHtmlCompletedDelegate == null)) {
                this.onUpdateViewHtmlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateViewHtmlCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateViewHtmlDelegate, new object[] {
                        listName,
                        viewName,
                        viewProperties,
                        toolbar,
                        viewHeader,
                        viewBody,
                        viewFooter,
                        viewEmpty,
                        rowLimitExceeded,
                        query,
                        viewFields,
                        aggregations,
                        formats,
                        rowLimit}, this.onEndUpdateViewHtmlDelegate, this.onUpdateViewHtmlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Views.ViewsSoap.BeginUpdateViewHtml2(WssSVLib.Views.UpdateViewHtml2Request request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateViewHtml2(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdateViewHtml2(
                    string listName, 
                    string viewName, 
                    System.Xml.Linq.XElement viewProperties, 
                    System.Xml.Linq.XElement toolbar, 
                    System.Xml.Linq.XElement viewHeader, 
                    System.Xml.Linq.XElement viewBody, 
                    System.Xml.Linq.XElement viewFooter, 
                    System.Xml.Linq.XElement viewEmpty, 
                    System.Xml.Linq.XElement rowLimitExceeded, 
                    System.Xml.Linq.XElement query, 
                    System.Xml.Linq.XElement viewFields, 
                    System.Xml.Linq.XElement aggregations, 
                    System.Xml.Linq.XElement formats, 
                    System.Xml.Linq.XElement rowLimit, 
                    string openApplicationExtension, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            WssSVLib.Views.UpdateViewHtml2Request inValue = new WssSVLib.Views.UpdateViewHtml2Request();
            inValue.Body = new WssSVLib.Views.UpdateViewHtml2RequestBody();
            inValue.Body.listName = listName;
            inValue.Body.viewName = viewName;
            inValue.Body.viewProperties = viewProperties;
            inValue.Body.toolbar = toolbar;
            inValue.Body.viewHeader = viewHeader;
            inValue.Body.viewBody = viewBody;
            inValue.Body.viewFooter = viewFooter;
            inValue.Body.viewEmpty = viewEmpty;
            inValue.Body.rowLimitExceeded = rowLimitExceeded;
            inValue.Body.query = query;
            inValue.Body.viewFields = viewFields;
            inValue.Body.aggregations = aggregations;
            inValue.Body.formats = formats;
            inValue.Body.rowLimit = rowLimit;
            inValue.Body.openApplicationExtension = openApplicationExtension;
            return ((WssSVLib.Views.ViewsSoap)(this)).BeginUpdateViewHtml2(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Views.UpdateViewHtml2Response WssSVLib.Views.ViewsSoap.EndUpdateViewHtml2(System.IAsyncResult result) {
            return base.Channel.EndUpdateViewHtml2(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndUpdateViewHtml2(System.IAsyncResult result) {
            WssSVLib.Views.UpdateViewHtml2Response retVal = ((WssSVLib.Views.ViewsSoap)(this)).EndUpdateViewHtml2(result);
            return retVal.Body.UpdateViewHtml2Result;
        }
        
        private System.IAsyncResult OnBeginUpdateViewHtml2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string listName = ((string)(inValues[0]));
            string viewName = ((string)(inValues[1]));
            System.Xml.Linq.XElement viewProperties = ((System.Xml.Linq.XElement)(inValues[2]));
            System.Xml.Linq.XElement toolbar = ((System.Xml.Linq.XElement)(inValues[3]));
            System.Xml.Linq.XElement viewHeader = ((System.Xml.Linq.XElement)(inValues[4]));
            System.Xml.Linq.XElement viewBody = ((System.Xml.Linq.XElement)(inValues[5]));
            System.Xml.Linq.XElement viewFooter = ((System.Xml.Linq.XElement)(inValues[6]));
            System.Xml.Linq.XElement viewEmpty = ((System.Xml.Linq.XElement)(inValues[7]));
            System.Xml.Linq.XElement rowLimitExceeded = ((System.Xml.Linq.XElement)(inValues[8]));
            System.Xml.Linq.XElement query = ((System.Xml.Linq.XElement)(inValues[9]));
            System.Xml.Linq.XElement viewFields = ((System.Xml.Linq.XElement)(inValues[10]));
            System.Xml.Linq.XElement aggregations = ((System.Xml.Linq.XElement)(inValues[11]));
            System.Xml.Linq.XElement formats = ((System.Xml.Linq.XElement)(inValues[12]));
            System.Xml.Linq.XElement rowLimit = ((System.Xml.Linq.XElement)(inValues[13]));
            string openApplicationExtension = ((string)(inValues[14]));
            return this.BeginUpdateViewHtml2(listName, viewName, viewProperties, toolbar, viewHeader, viewBody, viewFooter, viewEmpty, rowLimitExceeded, query, viewFields, aggregations, formats, rowLimit, openApplicationExtension, callback, asyncState);
        }
        
        private object[] OnEndUpdateViewHtml2(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndUpdateViewHtml2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateViewHtml2Completed(object state) {
            if ((this.UpdateViewHtml2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateViewHtml2Completed(this, new UpdateViewHtml2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateViewHtml2Async(string listName, string viewName, System.Xml.Linq.XElement viewProperties, System.Xml.Linq.XElement toolbar, System.Xml.Linq.XElement viewHeader, System.Xml.Linq.XElement viewBody, System.Xml.Linq.XElement viewFooter, System.Xml.Linq.XElement viewEmpty, System.Xml.Linq.XElement rowLimitExceeded, System.Xml.Linq.XElement query, System.Xml.Linq.XElement viewFields, System.Xml.Linq.XElement aggregations, System.Xml.Linq.XElement formats, System.Xml.Linq.XElement rowLimit, string openApplicationExtension) {
            this.UpdateViewHtml2Async(listName, viewName, viewProperties, toolbar, viewHeader, viewBody, viewFooter, viewEmpty, rowLimitExceeded, query, viewFields, aggregations, formats, rowLimit, openApplicationExtension, null);
        }
        
        public void UpdateViewHtml2Async(
                    string listName, 
                    string viewName, 
                    System.Xml.Linq.XElement viewProperties, 
                    System.Xml.Linq.XElement toolbar, 
                    System.Xml.Linq.XElement viewHeader, 
                    System.Xml.Linq.XElement viewBody, 
                    System.Xml.Linq.XElement viewFooter, 
                    System.Xml.Linq.XElement viewEmpty, 
                    System.Xml.Linq.XElement rowLimitExceeded, 
                    System.Xml.Linq.XElement query, 
                    System.Xml.Linq.XElement viewFields, 
                    System.Xml.Linq.XElement aggregations, 
                    System.Xml.Linq.XElement formats, 
                    System.Xml.Linq.XElement rowLimit, 
                    string openApplicationExtension, 
                    object userState) {
            if ((this.onBeginUpdateViewHtml2Delegate == null)) {
                this.onBeginUpdateViewHtml2Delegate = new BeginOperationDelegate(this.OnBeginUpdateViewHtml2);
            }
            if ((this.onEndUpdateViewHtml2Delegate == null)) {
                this.onEndUpdateViewHtml2Delegate = new EndOperationDelegate(this.OnEndUpdateViewHtml2);
            }
            if ((this.onUpdateViewHtml2CompletedDelegate == null)) {
                this.onUpdateViewHtml2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateViewHtml2Completed);
            }
            base.InvokeAsync(this.onBeginUpdateViewHtml2Delegate, new object[] {
                        listName,
                        viewName,
                        viewProperties,
                        toolbar,
                        viewHeader,
                        viewBody,
                        viewFooter,
                        viewEmpty,
                        rowLimitExceeded,
                        query,
                        viewFields,
                        aggregations,
                        formats,
                        rowLimit,
                        openApplicationExtension}, this.onEndUpdateViewHtml2Delegate, this.onUpdateViewHtml2CompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WssSVLib.Views.ViewsSoap CreateChannel() {
            return new ViewsSoapClientChannel(this);
        }
        
        private class ViewsSoapClientChannel : ChannelBase<WssSVLib.Views.ViewsSoap>, WssSVLib.Views.ViewsSoap {
            
            public ViewsSoapClientChannel(System.ServiceModel.ClientBase<WssSVLib.Views.ViewsSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetView(WssSVLib.Views.GetViewRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetView", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Views.GetViewResponse EndGetView(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Views.GetViewResponse _result = ((WssSVLib.Views.GetViewResponse)(base.EndInvoke("GetView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetViewHtml(WssSVLib.Views.GetViewHtmlRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetViewHtml", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Views.GetViewHtmlResponse EndGetViewHtml(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Views.GetViewHtmlResponse _result = ((WssSVLib.Views.GetViewHtmlResponse)(base.EndInvoke("GetViewHtml", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteView(WssSVLib.Views.DeleteViewRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DeleteView", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Views.DeleteViewResponse EndDeleteView(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Views.DeleteViewResponse _result = ((WssSVLib.Views.DeleteViewResponse)(base.EndInvoke("DeleteView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddView(WssSVLib.Views.AddViewRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AddView", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Views.AddViewResponse EndAddView(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Views.AddViewResponse _result = ((WssSVLib.Views.AddViewResponse)(base.EndInvoke("AddView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetViewCollection(WssSVLib.Views.GetViewCollectionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetViewCollection", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Views.GetViewCollectionResponse EndGetViewCollection(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Views.GetViewCollectionResponse _result = ((WssSVLib.Views.GetViewCollectionResponse)(base.EndInvoke("GetViewCollection", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateView(WssSVLib.Views.UpdateViewRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdateView", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Views.UpdateViewResponse EndUpdateView(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Views.UpdateViewResponse _result = ((WssSVLib.Views.UpdateViewResponse)(base.EndInvoke("UpdateView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateViewHtml(WssSVLib.Views.UpdateViewHtmlRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdateViewHtml", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Views.UpdateViewHtmlResponse EndUpdateViewHtml(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Views.UpdateViewHtmlResponse _result = ((WssSVLib.Views.UpdateViewHtmlResponse)(base.EndInvoke("UpdateViewHtml", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateViewHtml2(WssSVLib.Views.UpdateViewHtml2Request request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdateViewHtml2", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Views.UpdateViewHtml2Response EndUpdateViewHtml2(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Views.UpdateViewHtml2Response _result = ((WssSVLib.Views.UpdateViewHtml2Response)(base.EndInvoke("UpdateViewHtml2", _args, result)));
                return _result;
            }
        }
    }
}

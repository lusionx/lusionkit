//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace MyAlx.Core.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class alxEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new alxEntities object using the connection string found in the 'alxEntities' section of the application configuration file.
        /// </summary>
        public alxEntities() : base("name=alxEntities", "alxEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new alxEntities object.
        /// </summary>
        public alxEntities(string connectionString) : base(connectionString, "alxEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new alxEntities object.
        /// </summary>
        public alxEntities(EntityConnection connection) : base(connection, "alxEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<city> cities
        {
            get
            {
                if ((_cities == null))
                {
                    _cities = base.CreateObjectSet<city>("cities");
                }
                return _cities;
            }
        }
        private ObjectSet<city> _cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<country> countries
        {
            get
            {
                if ((_countries == null))
                {
                    _countries = base.CreateObjectSet<country>("countries");
                }
                return _countries;
            }
        }
        private ObjectSet<country> _countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<countrylanguage> countrylanguages
        {
            get
            {
                if ((_countrylanguages == null))
                {
                    _countrylanguages = base.CreateObjectSet<countrylanguage>("countrylanguages");
                }
                return _countrylanguages;
            }
        }
        private ObjectSet<countrylanguage> _countrylanguages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<worklog> worklogs
        {
            get
            {
                if ((_worklogs == null))
                {
                    _worklogs = base.CreateObjectSet<worklog>("worklogs");
                }
                return _worklogs;
            }
        }
        private ObjectSet<worklog> _worklogs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocities(city city)
        {
            base.AddObject("cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocountries(country country)
        {
            base.AddObject("countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the countrylanguages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocountrylanguages(countrylanguage countrylanguage)
        {
            base.AddObject("countrylanguages", countrylanguage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the worklogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToworklogs(worklog worklog)
        {
            base.AddObject("worklogs", worklog);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="alxModel", Name="city")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class city : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new city object.
        /// </summary>
        /// <param name="countryCode">Initial value of the CountryCode property.</param>
        /// <param name="district">Initial value of the District property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="population">Initial value of the Population property.</param>
        public static city Createcity(global::System.String countryCode, global::System.String district, global::System.Int32 id, global::System.String name, global::System.Int32 population)
        {
            city city = new city();
            city.CountryCode = countryCode;
            city.District = district;
            city.ID = id;
            city.Name = name;
            city.Population = population;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String District
        {
            get
            {
                return _District;
            }
            set
            {
                OnDistrictChanging(value);
                ReportPropertyChanging("District");
                _District = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("District");
                OnDistrictChanged();
            }
        }
        private global::System.String _District;
        partial void OnDistrictChanging(global::System.String value);
        partial void OnDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Population
        {
            get
            {
                return _Population;
            }
            set
            {
                OnPopulationChanging(value);
                ReportPropertyChanging("Population");
                _Population = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Population");
                OnPopulationChanged();
            }
        }
        private global::System.Int32 _Population;
        partial void OnPopulationChanging(global::System.Int32 value);
        partial void OnPopulationChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="alxModel", Name="country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new country object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="code2">Initial value of the Code2 property.</param>
        /// <param name="continent">Initial value of the Continent property.</param>
        /// <param name="governmentForm">Initial value of the GovernmentForm property.</param>
        /// <param name="localName">Initial value of the LocalName property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="population">Initial value of the Population property.</param>
        /// <param name="region">Initial value of the Region property.</param>
        /// <param name="surfaceArea">Initial value of the SurfaceArea property.</param>
        public static country Createcountry(global::System.String code, global::System.String code2, global::System.String continent, global::System.String governmentForm, global::System.String localName, global::System.String name, global::System.Int32 population, global::System.String region, global::System.Single surfaceArea)
        {
            country country = new country();
            country.Code = code;
            country.Code2 = code2;
            country.Continent = continent;
            country.GovernmentForm = governmentForm;
            country.LocalName = localName;
            country.Name = name;
            country.Population = population;
            country.Region = region;
            country.SurfaceArea = surfaceArea;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Capital
        {
            get
            {
                return _Capital;
            }
            set
            {
                OnCapitalChanging(value);
                ReportPropertyChanging("Capital");
                _Capital = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capital");
                OnCapitalChanged();
            }
        }
        private Nullable<global::System.Int32> _Capital;
        partial void OnCapitalChanging(Nullable<global::System.Int32> value);
        partial void OnCapitalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code2
        {
            get
            {
                return _Code2;
            }
            set
            {
                OnCode2Changing(value);
                ReportPropertyChanging("Code2");
                _Code2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code2");
                OnCode2Changed();
            }
        }
        private global::System.String _Code2;
        partial void OnCode2Changing(global::System.String value);
        partial void OnCode2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Continent
        {
            get
            {
                return _Continent;
            }
            set
            {
                OnContinentChanging(value);
                ReportPropertyChanging("Continent");
                _Continent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Continent");
                OnContinentChanged();
            }
        }
        private global::System.String _Continent;
        partial void OnContinentChanging(global::System.String value);
        partial void OnContinentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GNP
        {
            get
            {
                return _GNP;
            }
            set
            {
                OnGNPChanging(value);
                ReportPropertyChanging("GNP");
                _GNP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GNP");
                OnGNPChanged();
            }
        }
        private Nullable<global::System.Single> _GNP;
        partial void OnGNPChanging(Nullable<global::System.Single> value);
        partial void OnGNPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GNPOld
        {
            get
            {
                return _GNPOld;
            }
            set
            {
                OnGNPOldChanging(value);
                ReportPropertyChanging("GNPOld");
                _GNPOld = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GNPOld");
                OnGNPOldChanged();
            }
        }
        private Nullable<global::System.Single> _GNPOld;
        partial void OnGNPOldChanging(Nullable<global::System.Single> value);
        partial void OnGNPOldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GovernmentForm
        {
            get
            {
                return _GovernmentForm;
            }
            set
            {
                OnGovernmentFormChanging(value);
                ReportPropertyChanging("GovernmentForm");
                _GovernmentForm = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GovernmentForm");
                OnGovernmentFormChanged();
            }
        }
        private global::System.String _GovernmentForm;
        partial void OnGovernmentFormChanging(global::System.String value);
        partial void OnGovernmentFormChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HeadOfState
        {
            get
            {
                return _HeadOfState;
            }
            set
            {
                OnHeadOfStateChanging(value);
                ReportPropertyChanging("HeadOfState");
                _HeadOfState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HeadOfState");
                OnHeadOfStateChanged();
            }
        }
        private global::System.String _HeadOfState;
        partial void OnHeadOfStateChanging(global::System.String value);
        partial void OnHeadOfStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> IndepYear
        {
            get
            {
                return _IndepYear;
            }
            set
            {
                OnIndepYearChanging(value);
                ReportPropertyChanging("IndepYear");
                _IndepYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndepYear");
                OnIndepYearChanged();
            }
        }
        private Nullable<global::System.Int16> _IndepYear;
        partial void OnIndepYearChanging(Nullable<global::System.Int16> value);
        partial void OnIndepYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> LifeExpectancy
        {
            get
            {
                return _LifeExpectancy;
            }
            set
            {
                OnLifeExpectancyChanging(value);
                ReportPropertyChanging("LifeExpectancy");
                _LifeExpectancy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LifeExpectancy");
                OnLifeExpectancyChanged();
            }
        }
        private Nullable<global::System.Single> _LifeExpectancy;
        partial void OnLifeExpectancyChanging(Nullable<global::System.Single> value);
        partial void OnLifeExpectancyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocalName
        {
            get
            {
                return _LocalName;
            }
            set
            {
                OnLocalNameChanging(value);
                ReportPropertyChanging("LocalName");
                _LocalName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LocalName");
                OnLocalNameChanged();
            }
        }
        private global::System.String _LocalName;
        partial void OnLocalNameChanging(global::System.String value);
        partial void OnLocalNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Population
        {
            get
            {
                return _Population;
            }
            set
            {
                OnPopulationChanging(value);
                ReportPropertyChanging("Population");
                _Population = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Population");
                OnPopulationChanged();
            }
        }
        private global::System.Int32 _Population;
        partial void OnPopulationChanging(global::System.Int32 value);
        partial void OnPopulationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single SurfaceArea
        {
            get
            {
                return _SurfaceArea;
            }
            set
            {
                OnSurfaceAreaChanging(value);
                ReportPropertyChanging("SurfaceArea");
                _SurfaceArea = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SurfaceArea");
                OnSurfaceAreaChanged();
            }
        }
        private global::System.Single _SurfaceArea;
        partial void OnSurfaceAreaChanging(global::System.Single value);
        partial void OnSurfaceAreaChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="alxModel", Name="countrylanguage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class countrylanguage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new countrylanguage object.
        /// </summary>
        /// <param name="countryCode">Initial value of the CountryCode property.</param>
        /// <param name="isOfficial">Initial value of the IsOfficial property.</param>
        /// <param name="language">Initial value of the Language property.</param>
        /// <param name="percentage">Initial value of the Percentage property.</param>
        public static countrylanguage Createcountrylanguage(global::System.String countryCode, global::System.String isOfficial, global::System.String language, global::System.Single percentage)
        {
            countrylanguage countrylanguage = new countrylanguage();
            countrylanguage.CountryCode = countryCode;
            countrylanguage.IsOfficial = isOfficial;
            countrylanguage.Language = language;
            countrylanguage.Percentage = percentage;
            return countrylanguage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                if (_CountryCode != value)
                {
                    OnCountryCodeChanging(value);
                    ReportPropertyChanging("CountryCode");
                    _CountryCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CountryCode");
                    OnCountryCodeChanged();
                }
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IsOfficial
        {
            get
            {
                return _IsOfficial;
            }
            set
            {
                OnIsOfficialChanging(value);
                ReportPropertyChanging("IsOfficial");
                _IsOfficial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IsOfficial");
                OnIsOfficialChanged();
            }
        }
        private global::System.String _IsOfficial;
        partial void OnIsOfficialChanging(global::System.String value);
        partial void OnIsOfficialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                if (_Language != value)
                {
                    OnLanguageChanging(value);
                    ReportPropertyChanging("Language");
                    _Language = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Language");
                    OnLanguageChanged();
                }
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private global::System.Single _Percentage;
        partial void OnPercentageChanging(global::System.Single value);
        partial void OnPercentageChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="alxModel", Name="worklog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class worklog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new worklog object.
        /// </summary>
        /// <param name="autoID">Initial value of the AutoID property.</param>
        /// <param name="finish">Initial value of the Finish property.</param>
        /// <param name="guuID">Initial value of the GuuID property.</param>
        /// <param name="isFinish">Initial value of the IsFinish property.</param>
        /// <param name="log">Initial value of the Log property.</param>
        /// <param name="plan">Initial value of the Plan property.</param>
        /// <param name="refID">Initial value of the RefID property.</param>
        /// <param name="remark">Initial value of the Remark property.</param>
        public static worklog Createworklog(global::System.Int32 autoID, global::System.DateTime finish, global::System.Guid guuID, global::System.Boolean isFinish, global::System.String log, global::System.DateTime plan, global::System.Int32 refID, global::System.String remark)
        {
            worklog worklog = new worklog();
            worklog.AutoID = autoID;
            worklog.Finish = finish;
            worklog.GuuID = guuID;
            worklog.IsFinish = isFinish;
            worklog.Log = log;
            worklog.Plan = plan;
            worklog.RefID = refID;
            worklog.Remark = remark;
            return worklog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutoID
        {
            get
            {
                return _AutoID;
            }
            set
            {
                if (_AutoID != value)
                {
                    OnAutoIDChanging(value);
                    ReportPropertyChanging("AutoID");
                    _AutoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AutoID");
                    OnAutoIDChanged();
                }
            }
        }
        private global::System.Int32 _AutoID;
        partial void OnAutoIDChanging(global::System.Int32 value);
        partial void OnAutoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Finish
        {
            get
            {
                return _Finish;
            }
            set
            {
                OnFinishChanging(value);
                ReportPropertyChanging("Finish");
                _Finish = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Finish");
                OnFinishChanged();
            }
        }
        private global::System.DateTime _Finish;
        partial void OnFinishChanging(global::System.DateTime value);
        partial void OnFinishChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GuuID
        {
            get
            {
                return _GuuID;
            }
            set
            {
                OnGuuIDChanging(value);
                ReportPropertyChanging("GuuID");
                _GuuID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GuuID");
                OnGuuIDChanged();
            }
        }
        private global::System.Guid _GuuID;
        partial void OnGuuIDChanging(global::System.Guid value);
        partial void OnGuuIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFinish
        {
            get
            {
                return _IsFinish;
            }
            set
            {
                OnIsFinishChanging(value);
                ReportPropertyChanging("IsFinish");
                _IsFinish = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFinish");
                OnIsFinishChanged();
            }
        }
        private global::System.Boolean _IsFinish;
        partial void OnIsFinishChanging(global::System.Boolean value);
        partial void OnIsFinishChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Log
        {
            get
            {
                return _Log;
            }
            set
            {
                OnLogChanging(value);
                ReportPropertyChanging("Log");
                _Log = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Log");
                OnLogChanged();
            }
        }
        private global::System.String _Log;
        partial void OnLogChanging(global::System.String value);
        partial void OnLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Plan
        {
            get
            {
                return _Plan;
            }
            set
            {
                OnPlanChanging(value);
                ReportPropertyChanging("Plan");
                _Plan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Plan");
                OnPlanChanged();
            }
        }
        private global::System.DateTime _Plan;
        partial void OnPlanChanging(global::System.DateTime value);
        partial void OnPlanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RefID
        {
            get
            {
                return _RefID;
            }
            set
            {
                OnRefIDChanging(value);
                ReportPropertyChanging("RefID");
                _RefID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefID");
                OnRefIDChanged();
            }
        }
        private global::System.Int32 _RefID;
        partial void OnRefIDChanging(global::System.Int32 value);
        partial void OnRefIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
    }

    #endregion
    
}

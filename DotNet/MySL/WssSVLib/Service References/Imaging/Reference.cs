//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace WssSVLib.Imaging {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", ItemName="string")]
    public class ArrayOfString : System.Collections.ObjectModel.ObservableCollection<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfUnsignedInt", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", ItemName="unsignedInt")]
    public class ArrayOfUnsignedInt : System.Collections.ObjectModel.ObservableCollection<uint> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", ConfigurationName="Imaging.ImagingSoap")]
    public interface ImagingSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/ListPictureLibrary", ReplyAction="*")]
        System.IAsyncResult BeginListPictureLibrary(WssSVLib.Imaging.ListPictureLibraryRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.ListPictureLibraryResponse EndListPictureLibrary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/Upload", ReplyAction="*")]
        System.IAsyncResult BeginUpload(WssSVLib.Imaging.UploadRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.UploadResponse EndUpload(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/GetItemsXMLData", ReplyAction="*")]
        System.IAsyncResult BeginGetItemsXMLData(WssSVLib.Imaging.GetItemsXMLDataRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.GetItemsXMLDataResponse EndGetItemsXMLData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/GetItemsByIds", ReplyAction="*")]
        System.IAsyncResult BeginGetItemsByIds(WssSVLib.Imaging.GetItemsByIdsRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.GetItemsByIdsResponse EndGetItemsByIds(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/Delete", ReplyAction="*")]
        System.IAsyncResult BeginDelete(WssSVLib.Imaging.DeleteRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.DeleteResponse EndDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/Download", ReplyAction="*")]
        System.IAsyncResult BeginDownload(WssSVLib.Imaging.DownloadRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.DownloadResponse EndDownload(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/Edit", ReplyAction="*")]
        System.IAsyncResult BeginEdit(WssSVLib.Imaging.EditRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.EditResponse EndEdit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/GetListItems", ReplyAction="*")]
        System.IAsyncResult BeginGetListItems(WssSVLib.Imaging.GetListItemsRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.GetListItemsResponse EndGetListItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/CheckSubwebAndList", ReplyAction="*")]
        System.IAsyncResult BeginCheckSubwebAndList(WssSVLib.Imaging.CheckSubwebAndListRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.CheckSubwebAndListResponse EndCheckSubwebAndList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/Rename", ReplyAction="*")]
        System.IAsyncResult BeginRename(WssSVLib.Imaging.RenameRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.RenameResponse EndRename(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ois/CreateNewFolder", ReplyAction="*")]
        System.IAsyncResult BeginCreateNewFolder(WssSVLib.Imaging.CreateNewFolderRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Imaging.CreateNewFolderResponse EndCreateNewFolder(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListPictureLibraryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListPictureLibrary", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.ListPictureLibraryRequestBody Body;
        
        public ListPictureLibraryRequest() {
        }
        
        public ListPictureLibraryRequest(WssSVLib.Imaging.ListPictureLibraryRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ListPictureLibraryRequestBody {
        
        public ListPictureLibraryRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListPictureLibraryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListPictureLibraryResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.ListPictureLibraryResponseBody Body;
        
        public ListPictureLibraryResponse() {
        }
        
        public ListPictureLibraryResponse(WssSVLib.Imaging.ListPictureLibraryResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class ListPictureLibraryResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement ListPictureLibraryResult;
        
        public ListPictureLibraryResponseBody() {
        }
        
        public ListPictureLibraryResponseBody(System.Xml.Linq.XElement ListPictureLibraryResult) {
            this.ListPictureLibraryResult = ListPictureLibraryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Upload", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.UploadRequestBody Body;
        
        public UploadRequest() {
        }
        
        public UploadRequest(WssSVLib.Imaging.UploadRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class UploadRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strListName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strFolder;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] bytes;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool fOverWriteIfExist;
        
        public UploadRequestBody() {
        }
        
        public UploadRequestBody(string strListName, string strFolder, byte[] bytes, string fileName, bool fOverWriteIfExist) {
            this.strListName = strListName;
            this.strFolder = strFolder;
            this.bytes = bytes;
            this.fileName = fileName;
            this.fOverWriteIfExist = fOverWriteIfExist;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.UploadResponseBody Body;
        
        public UploadResponse() {
        }
        
        public UploadResponse(WssSVLib.Imaging.UploadResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class UploadResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement UploadResult;
        
        public UploadResponseBody() {
        }
        
        public UploadResponseBody(System.Xml.Linq.XElement UploadResult) {
            this.UploadResult = UploadResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetItemsXMLDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetItemsXMLData", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.GetItemsXMLDataRequestBody Body;
        
        public GetItemsXMLDataRequest() {
        }
        
        public GetItemsXMLDataRequest(WssSVLib.Imaging.GetItemsXMLDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class GetItemsXMLDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strListName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strFolder;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public WssSVLib.Imaging.ArrayOfString itemFileNames;
        
        public GetItemsXMLDataRequestBody() {
        }
        
        public GetItemsXMLDataRequestBody(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames) {
            this.strListName = strListName;
            this.strFolder = strFolder;
            this.itemFileNames = itemFileNames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetItemsXMLDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetItemsXMLDataResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.GetItemsXMLDataResponseBody Body;
        
        public GetItemsXMLDataResponse() {
        }
        
        public GetItemsXMLDataResponse(WssSVLib.Imaging.GetItemsXMLDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class GetItemsXMLDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement GetItemsXMLDataResult;
        
        public GetItemsXMLDataResponseBody() {
        }
        
        public GetItemsXMLDataResponseBody(System.Xml.Linq.XElement GetItemsXMLDataResult) {
            this.GetItemsXMLDataResult = GetItemsXMLDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetItemsByIdsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetItemsByIds", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.GetItemsByIdsRequestBody Body;
        
        public GetItemsByIdsRequest() {
        }
        
        public GetItemsByIdsRequest(WssSVLib.Imaging.GetItemsByIdsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class GetItemsByIdsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strListName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WssSVLib.Imaging.ArrayOfUnsignedInt ids;
        
        public GetItemsByIdsRequestBody() {
        }
        
        public GetItemsByIdsRequestBody(string strListName, WssSVLib.Imaging.ArrayOfUnsignedInt ids) {
            this.strListName = strListName;
            this.ids = ids;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetItemsByIdsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetItemsByIdsResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.GetItemsByIdsResponseBody Body;
        
        public GetItemsByIdsResponse() {
        }
        
        public GetItemsByIdsResponse(WssSVLib.Imaging.GetItemsByIdsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class GetItemsByIdsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement GetItemsByIdsResult;
        
        public GetItemsByIdsResponseBody() {
        }
        
        public GetItemsByIdsResponseBody(System.Xml.Linq.XElement GetItemsByIdsResult) {
            this.GetItemsByIdsResult = GetItemsByIdsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Delete", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.DeleteRequestBody Body;
        
        public DeleteRequest() {
        }
        
        public DeleteRequest(WssSVLib.Imaging.DeleteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class DeleteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strListName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strFolder;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public WssSVLib.Imaging.ArrayOfString itemFileNames;
        
        public DeleteRequestBody() {
        }
        
        public DeleteRequestBody(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames) {
            this.strListName = strListName;
            this.strFolder = strFolder;
            this.itemFileNames = itemFileNames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.DeleteResponseBody Body;
        
        public DeleteResponse() {
        }
        
        public DeleteResponse(WssSVLib.Imaging.DeleteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class DeleteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement DeleteResult;
        
        public DeleteResponseBody() {
        }
        
        public DeleteResponseBody(System.Xml.Linq.XElement DeleteResult) {
            this.DeleteResult = DeleteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DownloadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Download", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.DownloadRequestBody Body;
        
        public DownloadRequest() {
        }
        
        public DownloadRequest(WssSVLib.Imaging.DownloadRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class DownloadRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strListName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strFolder;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public WssSVLib.Imaging.ArrayOfString itemFileNames;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public uint type;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool fFetchOriginalIfNotAvailable;
        
        public DownloadRequestBody() {
        }
        
        public DownloadRequestBody(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames, uint type, bool fFetchOriginalIfNotAvailable) {
            this.strListName = strListName;
            this.strFolder = strFolder;
            this.itemFileNames = itemFileNames;
            this.type = type;
            this.fFetchOriginalIfNotAvailable = fFetchOriginalIfNotAvailable;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DownloadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DownloadResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.DownloadResponseBody Body;
        
        public DownloadResponse() {
        }
        
        public DownloadResponse(WssSVLib.Imaging.DownloadResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class DownloadResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement DownloadResult;
        
        public DownloadResponseBody() {
        }
        
        public DownloadResponseBody(System.Xml.Linq.XElement DownloadResult) {
            this.DownloadResult = DownloadResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EditRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Edit", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.EditRequestBody Body;
        
        public EditRequest() {
        }
        
        public EditRequest(WssSVLib.Imaging.EditRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class EditRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strListName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strFolder;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string itemFileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.Linq.XElement recipe;
        
        public EditRequestBody() {
        }
        
        public EditRequestBody(string strListName, string strFolder, string itemFileName, System.Xml.Linq.XElement recipe) {
            this.strListName = strListName;
            this.strFolder = strFolder;
            this.itemFileName = itemFileName;
            this.recipe = recipe;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EditResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EditResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.EditResponseBody Body;
        
        public EditResponse() {
        }
        
        public EditResponse(WssSVLib.Imaging.EditResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class EditResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement EditResult;
        
        public EditResponseBody() {
        }
        
        public EditResponseBody(System.Xml.Linq.XElement EditResult) {
            this.EditResult = EditResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetListItemsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetListItems", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.GetListItemsRequestBody Body;
        
        public GetListItemsRequest() {
        }
        
        public GetListItemsRequest(WssSVLib.Imaging.GetListItemsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class GetListItemsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strListName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strFolder;
        
        public GetListItemsRequestBody() {
        }
        
        public GetListItemsRequestBody(string strListName, string strFolder) {
            this.strListName = strListName;
            this.strFolder = strFolder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetListItemsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetListItemsResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.GetListItemsResponseBody Body;
        
        public GetListItemsResponse() {
        }
        
        public GetListItemsResponse(WssSVLib.Imaging.GetListItemsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class GetListItemsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement GetListItemsResult;
        
        public GetListItemsResponseBody() {
        }
        
        public GetListItemsResponseBody(System.Xml.Linq.XElement GetListItemsResult) {
            this.GetListItemsResult = GetListItemsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckSubwebAndListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckSubwebAndList", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.CheckSubwebAndListRequestBody Body;
        
        public CheckSubwebAndListRequest() {
        }
        
        public CheckSubwebAndListRequest(WssSVLib.Imaging.CheckSubwebAndListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class CheckSubwebAndListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strUrl;
        
        public CheckSubwebAndListRequestBody() {
        }
        
        public CheckSubwebAndListRequestBody(string strUrl) {
            this.strUrl = strUrl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckSubwebAndListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckSubwebAndListResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.CheckSubwebAndListResponseBody Body;
        
        public CheckSubwebAndListResponse() {
        }
        
        public CheckSubwebAndListResponse(WssSVLib.Imaging.CheckSubwebAndListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class CheckSubwebAndListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement CheckSubwebAndListResult;
        
        public CheckSubwebAndListResponseBody() {
        }
        
        public CheckSubwebAndListResponseBody(System.Xml.Linq.XElement CheckSubwebAndListResult) {
            this.CheckSubwebAndListResult = CheckSubwebAndListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RenameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Rename", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.RenameRequestBody Body;
        
        public RenameRequest() {
        }
        
        public RenameRequest(WssSVLib.Imaging.RenameRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class RenameRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strListName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strFolder;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.Linq.XElement request;
        
        public RenameRequestBody() {
        }
        
        public RenameRequestBody(string strListName, string strFolder, System.Xml.Linq.XElement request) {
            this.strListName = strListName;
            this.strFolder = strFolder;
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RenameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RenameResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.RenameResponseBody Body;
        
        public RenameResponse() {
        }
        
        public RenameResponse(WssSVLib.Imaging.RenameResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class RenameResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement RenameResult;
        
        public RenameResponseBody() {
        }
        
        public RenameResponseBody(System.Xml.Linq.XElement RenameResult) {
            this.RenameResult = RenameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateNewFolderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateNewFolder", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.CreateNewFolderRequestBody Body;
        
        public CreateNewFolderRequest() {
        }
        
        public CreateNewFolderRequest(WssSVLib.Imaging.CreateNewFolderRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class CreateNewFolderRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strListName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string strParentFolder;
        
        public CreateNewFolderRequestBody() {
        }
        
        public CreateNewFolderRequestBody(string strListName, string strParentFolder) {
            this.strListName = strListName;
            this.strParentFolder = strParentFolder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateNewFolderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateNewFolderResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public WssSVLib.Imaging.CreateNewFolderResponseBody Body;
        
        public CreateNewFolderResponse() {
        }
        
        public CreateNewFolderResponse(WssSVLib.Imaging.CreateNewFolderResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/")]
    public partial class CreateNewFolderResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement CreateNewFolderResult;
        
        public CreateNewFolderResponseBody() {
        }
        
        public CreateNewFolderResponseBody(System.Xml.Linq.XElement CreateNewFolderResult) {
            this.CreateNewFolderResult = CreateNewFolderResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ImagingSoapChannel : WssSVLib.Imaging.ImagingSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ListPictureLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListPictureLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetItemsXMLDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemsXMLDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetItemsByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemsByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class EditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetListItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CheckSubwebAndListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckSubwebAndListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class RenameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RenameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CreateNewFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateNewFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ImagingSoapClient : System.ServiceModel.ClientBase<WssSVLib.Imaging.ImagingSoap>, WssSVLib.Imaging.ImagingSoap {
        
        private BeginOperationDelegate onBeginListPictureLibraryDelegate;
        
        private EndOperationDelegate onEndListPictureLibraryDelegate;
        
        private System.Threading.SendOrPostCallback onListPictureLibraryCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadDelegate;
        
        private EndOperationDelegate onEndUploadDelegate;
        
        private System.Threading.SendOrPostCallback onUploadCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetItemsXMLDataDelegate;
        
        private EndOperationDelegate onEndGetItemsXMLDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemsXMLDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetItemsByIdsDelegate;
        
        private EndOperationDelegate onEndGetItemsByIdsDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemsByIdsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadDelegate;
        
        private EndOperationDelegate onEndDownloadDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditDelegate;
        
        private EndOperationDelegate onEndEditDelegate;
        
        private System.Threading.SendOrPostCallback onEditCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListItemsDelegate;
        
        private EndOperationDelegate onEndGetListItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckSubwebAndListDelegate;
        
        private EndOperationDelegate onEndCheckSubwebAndListDelegate;
        
        private System.Threading.SendOrPostCallback onCheckSubwebAndListCompletedDelegate;
        
        private BeginOperationDelegate onBeginRenameDelegate;
        
        private EndOperationDelegate onEndRenameDelegate;
        
        private System.Threading.SendOrPostCallback onRenameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateNewFolderDelegate;
        
        private EndOperationDelegate onEndCreateNewFolderDelegate;
        
        private System.Threading.SendOrPostCallback onCreateNewFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ImagingSoapClient() {
        }
        
        public ImagingSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImagingSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImagingSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImagingSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<ListPictureLibraryCompletedEventArgs> ListPictureLibraryCompleted;
        
        public event System.EventHandler<UploadCompletedEventArgs> UploadCompleted;
        
        public event System.EventHandler<GetItemsXMLDataCompletedEventArgs> GetItemsXMLDataCompleted;
        
        public event System.EventHandler<GetItemsByIdsCompletedEventArgs> GetItemsByIdsCompleted;
        
        public event System.EventHandler<DeleteCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<DownloadCompletedEventArgs> DownloadCompleted;
        
        public event System.EventHandler<EditCompletedEventArgs> EditCompleted;
        
        public event System.EventHandler<GetListItemsCompletedEventArgs> GetListItemsCompleted;
        
        public event System.EventHandler<CheckSubwebAndListCompletedEventArgs> CheckSubwebAndListCompleted;
        
        public event System.EventHandler<RenameCompletedEventArgs> RenameCompleted;
        
        public event System.EventHandler<CreateNewFolderCompletedEventArgs> CreateNewFolderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginListPictureLibrary(WssSVLib.Imaging.ListPictureLibraryRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListPictureLibrary(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginListPictureLibrary(System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.ListPictureLibraryRequest inValue = new WssSVLib.Imaging.ListPictureLibraryRequest();
            inValue.Body = new WssSVLib.Imaging.ListPictureLibraryRequestBody();
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginListPictureLibrary(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.ListPictureLibraryResponse WssSVLib.Imaging.ImagingSoap.EndListPictureLibrary(System.IAsyncResult result) {
            return base.Channel.EndListPictureLibrary(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndListPictureLibrary(System.IAsyncResult result) {
            WssSVLib.Imaging.ListPictureLibraryResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndListPictureLibrary(result);
            return retVal.Body.ListPictureLibraryResult;
        }
        
        private System.IAsyncResult OnBeginListPictureLibrary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginListPictureLibrary(callback, asyncState);
        }
        
        private object[] OnEndListPictureLibrary(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndListPictureLibrary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListPictureLibraryCompleted(object state) {
            if ((this.ListPictureLibraryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListPictureLibraryCompleted(this, new ListPictureLibraryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListPictureLibraryAsync() {
            this.ListPictureLibraryAsync(null);
        }
        
        public void ListPictureLibraryAsync(object userState) {
            if ((this.onBeginListPictureLibraryDelegate == null)) {
                this.onBeginListPictureLibraryDelegate = new BeginOperationDelegate(this.OnBeginListPictureLibrary);
            }
            if ((this.onEndListPictureLibraryDelegate == null)) {
                this.onEndListPictureLibraryDelegate = new EndOperationDelegate(this.OnEndListPictureLibrary);
            }
            if ((this.onListPictureLibraryCompletedDelegate == null)) {
                this.onListPictureLibraryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListPictureLibraryCompleted);
            }
            base.InvokeAsync(this.onBeginListPictureLibraryDelegate, null, this.onEndListPictureLibraryDelegate, this.onListPictureLibraryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginUpload(WssSVLib.Imaging.UploadRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpload(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpload(string strListName, string strFolder, byte[] bytes, string fileName, bool fOverWriteIfExist, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.UploadRequest inValue = new WssSVLib.Imaging.UploadRequest();
            inValue.Body = new WssSVLib.Imaging.UploadRequestBody();
            inValue.Body.strListName = strListName;
            inValue.Body.strFolder = strFolder;
            inValue.Body.bytes = bytes;
            inValue.Body.fileName = fileName;
            inValue.Body.fOverWriteIfExist = fOverWriteIfExist;
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginUpload(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.UploadResponse WssSVLib.Imaging.ImagingSoap.EndUpload(System.IAsyncResult result) {
            return base.Channel.EndUpload(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndUpload(System.IAsyncResult result) {
            WssSVLib.Imaging.UploadResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndUpload(result);
            return retVal.Body.UploadResult;
        }
        
        private System.IAsyncResult OnBeginUpload(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strListName = ((string)(inValues[0]));
            string strFolder = ((string)(inValues[1]));
            byte[] bytes = ((byte[])(inValues[2]));
            string fileName = ((string)(inValues[3]));
            bool fOverWriteIfExist = ((bool)(inValues[4]));
            return this.BeginUpload(strListName, strFolder, bytes, fileName, fOverWriteIfExist, callback, asyncState);
        }
        
        private object[] OnEndUpload(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndUpload(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadCompleted(object state) {
            if ((this.UploadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadCompleted(this, new UploadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadAsync(string strListName, string strFolder, byte[] bytes, string fileName, bool fOverWriteIfExist) {
            this.UploadAsync(strListName, strFolder, bytes, fileName, fOverWriteIfExist, null);
        }
        
        public void UploadAsync(string strListName, string strFolder, byte[] bytes, string fileName, bool fOverWriteIfExist, object userState) {
            if ((this.onBeginUploadDelegate == null)) {
                this.onBeginUploadDelegate = new BeginOperationDelegate(this.OnBeginUpload);
            }
            if ((this.onEndUploadDelegate == null)) {
                this.onEndUploadDelegate = new EndOperationDelegate(this.OnEndUpload);
            }
            if ((this.onUploadCompletedDelegate == null)) {
                this.onUploadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadCompleted);
            }
            base.InvokeAsync(this.onBeginUploadDelegate, new object[] {
                        strListName,
                        strFolder,
                        bytes,
                        fileName,
                        fOverWriteIfExist}, this.onEndUploadDelegate, this.onUploadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginGetItemsXMLData(WssSVLib.Imaging.GetItemsXMLDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItemsXMLData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetItemsXMLData(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.GetItemsXMLDataRequest inValue = new WssSVLib.Imaging.GetItemsXMLDataRequest();
            inValue.Body = new WssSVLib.Imaging.GetItemsXMLDataRequestBody();
            inValue.Body.strListName = strListName;
            inValue.Body.strFolder = strFolder;
            inValue.Body.itemFileNames = itemFileNames;
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginGetItemsXMLData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.GetItemsXMLDataResponse WssSVLib.Imaging.ImagingSoap.EndGetItemsXMLData(System.IAsyncResult result) {
            return base.Channel.EndGetItemsXMLData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndGetItemsXMLData(System.IAsyncResult result) {
            WssSVLib.Imaging.GetItemsXMLDataResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndGetItemsXMLData(result);
            return retVal.Body.GetItemsXMLDataResult;
        }
        
        private System.IAsyncResult OnBeginGetItemsXMLData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strListName = ((string)(inValues[0]));
            string strFolder = ((string)(inValues[1]));
            WssSVLib.Imaging.ArrayOfString itemFileNames = ((WssSVLib.Imaging.ArrayOfString)(inValues[2]));
            return this.BeginGetItemsXMLData(strListName, strFolder, itemFileNames, callback, asyncState);
        }
        
        private object[] OnEndGetItemsXMLData(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndGetItemsXMLData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemsXMLDataCompleted(object state) {
            if ((this.GetItemsXMLDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemsXMLDataCompleted(this, new GetItemsXMLDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemsXMLDataAsync(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames) {
            this.GetItemsXMLDataAsync(strListName, strFolder, itemFileNames, null);
        }
        
        public void GetItemsXMLDataAsync(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames, object userState) {
            if ((this.onBeginGetItemsXMLDataDelegate == null)) {
                this.onBeginGetItemsXMLDataDelegate = new BeginOperationDelegate(this.OnBeginGetItemsXMLData);
            }
            if ((this.onEndGetItemsXMLDataDelegate == null)) {
                this.onEndGetItemsXMLDataDelegate = new EndOperationDelegate(this.OnEndGetItemsXMLData);
            }
            if ((this.onGetItemsXMLDataCompletedDelegate == null)) {
                this.onGetItemsXMLDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemsXMLDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemsXMLDataDelegate, new object[] {
                        strListName,
                        strFolder,
                        itemFileNames}, this.onEndGetItemsXMLDataDelegate, this.onGetItemsXMLDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginGetItemsByIds(WssSVLib.Imaging.GetItemsByIdsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItemsByIds(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetItemsByIds(string strListName, WssSVLib.Imaging.ArrayOfUnsignedInt ids, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.GetItemsByIdsRequest inValue = new WssSVLib.Imaging.GetItemsByIdsRequest();
            inValue.Body = new WssSVLib.Imaging.GetItemsByIdsRequestBody();
            inValue.Body.strListName = strListName;
            inValue.Body.ids = ids;
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginGetItemsByIds(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.GetItemsByIdsResponse WssSVLib.Imaging.ImagingSoap.EndGetItemsByIds(System.IAsyncResult result) {
            return base.Channel.EndGetItemsByIds(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndGetItemsByIds(System.IAsyncResult result) {
            WssSVLib.Imaging.GetItemsByIdsResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndGetItemsByIds(result);
            return retVal.Body.GetItemsByIdsResult;
        }
        
        private System.IAsyncResult OnBeginGetItemsByIds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strListName = ((string)(inValues[0]));
            WssSVLib.Imaging.ArrayOfUnsignedInt ids = ((WssSVLib.Imaging.ArrayOfUnsignedInt)(inValues[1]));
            return this.BeginGetItemsByIds(strListName, ids, callback, asyncState);
        }
        
        private object[] OnEndGetItemsByIds(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndGetItemsByIds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemsByIdsCompleted(object state) {
            if ((this.GetItemsByIdsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemsByIdsCompleted(this, new GetItemsByIdsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemsByIdsAsync(string strListName, WssSVLib.Imaging.ArrayOfUnsignedInt ids) {
            this.GetItemsByIdsAsync(strListName, ids, null);
        }
        
        public void GetItemsByIdsAsync(string strListName, WssSVLib.Imaging.ArrayOfUnsignedInt ids, object userState) {
            if ((this.onBeginGetItemsByIdsDelegate == null)) {
                this.onBeginGetItemsByIdsDelegate = new BeginOperationDelegate(this.OnBeginGetItemsByIds);
            }
            if ((this.onEndGetItemsByIdsDelegate == null)) {
                this.onEndGetItemsByIdsDelegate = new EndOperationDelegate(this.OnEndGetItemsByIds);
            }
            if ((this.onGetItemsByIdsCompletedDelegate == null)) {
                this.onGetItemsByIdsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemsByIdsCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemsByIdsDelegate, new object[] {
                        strListName,
                        ids}, this.onEndGetItemsByIdsDelegate, this.onGetItemsByIdsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginDelete(WssSVLib.Imaging.DeleteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDelete(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.DeleteRequest inValue = new WssSVLib.Imaging.DeleteRequest();
            inValue.Body = new WssSVLib.Imaging.DeleteRequestBody();
            inValue.Body.strListName = strListName;
            inValue.Body.strFolder = strFolder;
            inValue.Body.itemFileNames = itemFileNames;
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginDelete(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.DeleteResponse WssSVLib.Imaging.ImagingSoap.EndDelete(System.IAsyncResult result) {
            return base.Channel.EndDelete(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndDelete(System.IAsyncResult result) {
            WssSVLib.Imaging.DeleteResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndDelete(result);
            return retVal.Body.DeleteResult;
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strListName = ((string)(inValues[0]));
            string strFolder = ((string)(inValues[1]));
            WssSVLib.Imaging.ArrayOfString itemFileNames = ((WssSVLib.Imaging.ArrayOfString)(inValues[2]));
            return this.BeginDelete(strListName, strFolder, itemFileNames, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames) {
            this.DeleteAsync(strListName, strFolder, itemFileNames, null);
        }
        
        public void DeleteAsync(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        strListName,
                        strFolder,
                        itemFileNames}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginDownload(WssSVLib.Imaging.DownloadRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownload(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDownload(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames, uint type, bool fFetchOriginalIfNotAvailable, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.DownloadRequest inValue = new WssSVLib.Imaging.DownloadRequest();
            inValue.Body = new WssSVLib.Imaging.DownloadRequestBody();
            inValue.Body.strListName = strListName;
            inValue.Body.strFolder = strFolder;
            inValue.Body.itemFileNames = itemFileNames;
            inValue.Body.type = type;
            inValue.Body.fFetchOriginalIfNotAvailable = fFetchOriginalIfNotAvailable;
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginDownload(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.DownloadResponse WssSVLib.Imaging.ImagingSoap.EndDownload(System.IAsyncResult result) {
            return base.Channel.EndDownload(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndDownload(System.IAsyncResult result) {
            WssSVLib.Imaging.DownloadResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndDownload(result);
            return retVal.Body.DownloadResult;
        }
        
        private System.IAsyncResult OnBeginDownload(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strListName = ((string)(inValues[0]));
            string strFolder = ((string)(inValues[1]));
            WssSVLib.Imaging.ArrayOfString itemFileNames = ((WssSVLib.Imaging.ArrayOfString)(inValues[2]));
            uint type = ((uint)(inValues[3]));
            bool fFetchOriginalIfNotAvailable = ((bool)(inValues[4]));
            return this.BeginDownload(strListName, strFolder, itemFileNames, type, fFetchOriginalIfNotAvailable, callback, asyncState);
        }
        
        private object[] OnEndDownload(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndDownload(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadCompleted(object state) {
            if ((this.DownloadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadCompleted(this, new DownloadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadAsync(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames, uint type, bool fFetchOriginalIfNotAvailable) {
            this.DownloadAsync(strListName, strFolder, itemFileNames, type, fFetchOriginalIfNotAvailable, null);
        }
        
        public void DownloadAsync(string strListName, string strFolder, WssSVLib.Imaging.ArrayOfString itemFileNames, uint type, bool fFetchOriginalIfNotAvailable, object userState) {
            if ((this.onBeginDownloadDelegate == null)) {
                this.onBeginDownloadDelegate = new BeginOperationDelegate(this.OnBeginDownload);
            }
            if ((this.onEndDownloadDelegate == null)) {
                this.onEndDownloadDelegate = new EndOperationDelegate(this.OnEndDownload);
            }
            if ((this.onDownloadCompletedDelegate == null)) {
                this.onDownloadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadDelegate, new object[] {
                        strListName,
                        strFolder,
                        itemFileNames,
                        type,
                        fFetchOriginalIfNotAvailable}, this.onEndDownloadDelegate, this.onDownloadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginEdit(WssSVLib.Imaging.EditRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEdit(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginEdit(string strListName, string strFolder, string itemFileName, System.Xml.Linq.XElement recipe, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.EditRequest inValue = new WssSVLib.Imaging.EditRequest();
            inValue.Body = new WssSVLib.Imaging.EditRequestBody();
            inValue.Body.strListName = strListName;
            inValue.Body.strFolder = strFolder;
            inValue.Body.itemFileName = itemFileName;
            inValue.Body.recipe = recipe;
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginEdit(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.EditResponse WssSVLib.Imaging.ImagingSoap.EndEdit(System.IAsyncResult result) {
            return base.Channel.EndEdit(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndEdit(System.IAsyncResult result) {
            WssSVLib.Imaging.EditResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndEdit(result);
            return retVal.Body.EditResult;
        }
        
        private System.IAsyncResult OnBeginEdit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strListName = ((string)(inValues[0]));
            string strFolder = ((string)(inValues[1]));
            string itemFileName = ((string)(inValues[2]));
            System.Xml.Linq.XElement recipe = ((System.Xml.Linq.XElement)(inValues[3]));
            return this.BeginEdit(strListName, strFolder, itemFileName, recipe, callback, asyncState);
        }
        
        private object[] OnEndEdit(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndEdit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditCompleted(object state) {
            if ((this.EditCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditCompleted(this, new EditCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditAsync(string strListName, string strFolder, string itemFileName, System.Xml.Linq.XElement recipe) {
            this.EditAsync(strListName, strFolder, itemFileName, recipe, null);
        }
        
        public void EditAsync(string strListName, string strFolder, string itemFileName, System.Xml.Linq.XElement recipe, object userState) {
            if ((this.onBeginEditDelegate == null)) {
                this.onBeginEditDelegate = new BeginOperationDelegate(this.OnBeginEdit);
            }
            if ((this.onEndEditDelegate == null)) {
                this.onEndEditDelegate = new EndOperationDelegate(this.OnEndEdit);
            }
            if ((this.onEditCompletedDelegate == null)) {
                this.onEditCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditCompleted);
            }
            base.InvokeAsync(this.onBeginEditDelegate, new object[] {
                        strListName,
                        strFolder,
                        itemFileName,
                        recipe}, this.onEndEditDelegate, this.onEditCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginGetListItems(WssSVLib.Imaging.GetListItemsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListItems(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetListItems(string strListName, string strFolder, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.GetListItemsRequest inValue = new WssSVLib.Imaging.GetListItemsRequest();
            inValue.Body = new WssSVLib.Imaging.GetListItemsRequestBody();
            inValue.Body.strListName = strListName;
            inValue.Body.strFolder = strFolder;
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginGetListItems(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.GetListItemsResponse WssSVLib.Imaging.ImagingSoap.EndGetListItems(System.IAsyncResult result) {
            return base.Channel.EndGetListItems(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndGetListItems(System.IAsyncResult result) {
            WssSVLib.Imaging.GetListItemsResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndGetListItems(result);
            return retVal.Body.GetListItemsResult;
        }
        
        private System.IAsyncResult OnBeginGetListItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strListName = ((string)(inValues[0]));
            string strFolder = ((string)(inValues[1]));
            return this.BeginGetListItems(strListName, strFolder, callback, asyncState);
        }
        
        private object[] OnEndGetListItems(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndGetListItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListItemsCompleted(object state) {
            if ((this.GetListItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListItemsCompleted(this, new GetListItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListItemsAsync(string strListName, string strFolder) {
            this.GetListItemsAsync(strListName, strFolder, null);
        }
        
        public void GetListItemsAsync(string strListName, string strFolder, object userState) {
            if ((this.onBeginGetListItemsDelegate == null)) {
                this.onBeginGetListItemsDelegate = new BeginOperationDelegate(this.OnBeginGetListItems);
            }
            if ((this.onEndGetListItemsDelegate == null)) {
                this.onEndGetListItemsDelegate = new EndOperationDelegate(this.OnEndGetListItems);
            }
            if ((this.onGetListItemsCompletedDelegate == null)) {
                this.onGetListItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListItemsDelegate, new object[] {
                        strListName,
                        strFolder}, this.onEndGetListItemsDelegate, this.onGetListItemsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginCheckSubwebAndList(WssSVLib.Imaging.CheckSubwebAndListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckSubwebAndList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCheckSubwebAndList(string strUrl, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.CheckSubwebAndListRequest inValue = new WssSVLib.Imaging.CheckSubwebAndListRequest();
            inValue.Body = new WssSVLib.Imaging.CheckSubwebAndListRequestBody();
            inValue.Body.strUrl = strUrl;
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginCheckSubwebAndList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.CheckSubwebAndListResponse WssSVLib.Imaging.ImagingSoap.EndCheckSubwebAndList(System.IAsyncResult result) {
            return base.Channel.EndCheckSubwebAndList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndCheckSubwebAndList(System.IAsyncResult result) {
            WssSVLib.Imaging.CheckSubwebAndListResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndCheckSubwebAndList(result);
            return retVal.Body.CheckSubwebAndListResult;
        }
        
        private System.IAsyncResult OnBeginCheckSubwebAndList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strUrl = ((string)(inValues[0]));
            return this.BeginCheckSubwebAndList(strUrl, callback, asyncState);
        }
        
        private object[] OnEndCheckSubwebAndList(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndCheckSubwebAndList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckSubwebAndListCompleted(object state) {
            if ((this.CheckSubwebAndListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckSubwebAndListCompleted(this, new CheckSubwebAndListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckSubwebAndListAsync(string strUrl) {
            this.CheckSubwebAndListAsync(strUrl, null);
        }
        
        public void CheckSubwebAndListAsync(string strUrl, object userState) {
            if ((this.onBeginCheckSubwebAndListDelegate == null)) {
                this.onBeginCheckSubwebAndListDelegate = new BeginOperationDelegate(this.OnBeginCheckSubwebAndList);
            }
            if ((this.onEndCheckSubwebAndListDelegate == null)) {
                this.onEndCheckSubwebAndListDelegate = new EndOperationDelegate(this.OnEndCheckSubwebAndList);
            }
            if ((this.onCheckSubwebAndListCompletedDelegate == null)) {
                this.onCheckSubwebAndListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckSubwebAndListCompleted);
            }
            base.InvokeAsync(this.onBeginCheckSubwebAndListDelegate, new object[] {
                        strUrl}, this.onEndCheckSubwebAndListDelegate, this.onCheckSubwebAndListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginRename(WssSVLib.Imaging.RenameRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRename(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginRename(string strListName, string strFolder, System.Xml.Linq.XElement request, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.RenameRequest inValue = new WssSVLib.Imaging.RenameRequest();
            inValue.Body = new WssSVLib.Imaging.RenameRequestBody();
            inValue.Body.strListName = strListName;
            inValue.Body.strFolder = strFolder;
            inValue.Body.request = request;
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginRename(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.RenameResponse WssSVLib.Imaging.ImagingSoap.EndRename(System.IAsyncResult result) {
            return base.Channel.EndRename(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndRename(System.IAsyncResult result) {
            WssSVLib.Imaging.RenameResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndRename(result);
            return retVal.Body.RenameResult;
        }
        
        private System.IAsyncResult OnBeginRename(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strListName = ((string)(inValues[0]));
            string strFolder = ((string)(inValues[1]));
            System.Xml.Linq.XElement request = ((System.Xml.Linq.XElement)(inValues[2]));
            return this.BeginRename(strListName, strFolder, request, callback, asyncState);
        }
        
        private object[] OnEndRename(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndRename(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRenameCompleted(object state) {
            if ((this.RenameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RenameCompleted(this, new RenameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RenameAsync(string strListName, string strFolder, System.Xml.Linq.XElement request) {
            this.RenameAsync(strListName, strFolder, request, null);
        }
        
        public void RenameAsync(string strListName, string strFolder, System.Xml.Linq.XElement request, object userState) {
            if ((this.onBeginRenameDelegate == null)) {
                this.onBeginRenameDelegate = new BeginOperationDelegate(this.OnBeginRename);
            }
            if ((this.onEndRenameDelegate == null)) {
                this.onEndRenameDelegate = new EndOperationDelegate(this.OnEndRename);
            }
            if ((this.onRenameCompletedDelegate == null)) {
                this.onRenameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRenameCompleted);
            }
            base.InvokeAsync(this.onBeginRenameDelegate, new object[] {
                        strListName,
                        strFolder,
                        request}, this.onEndRenameDelegate, this.onRenameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Imaging.ImagingSoap.BeginCreateNewFolder(WssSVLib.Imaging.CreateNewFolderRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateNewFolder(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCreateNewFolder(string strListName, string strParentFolder, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Imaging.CreateNewFolderRequest inValue = new WssSVLib.Imaging.CreateNewFolderRequest();
            inValue.Body = new WssSVLib.Imaging.CreateNewFolderRequestBody();
            inValue.Body.strListName = strListName;
            inValue.Body.strParentFolder = strParentFolder;
            return ((WssSVLib.Imaging.ImagingSoap)(this)).BeginCreateNewFolder(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Imaging.CreateNewFolderResponse WssSVLib.Imaging.ImagingSoap.EndCreateNewFolder(System.IAsyncResult result) {
            return base.Channel.EndCreateNewFolder(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndCreateNewFolder(System.IAsyncResult result) {
            WssSVLib.Imaging.CreateNewFolderResponse retVal = ((WssSVLib.Imaging.ImagingSoap)(this)).EndCreateNewFolder(result);
            return retVal.Body.CreateNewFolderResult;
        }
        
        private System.IAsyncResult OnBeginCreateNewFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strListName = ((string)(inValues[0]));
            string strParentFolder = ((string)(inValues[1]));
            return this.BeginCreateNewFolder(strListName, strParentFolder, callback, asyncState);
        }
        
        private object[] OnEndCreateNewFolder(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndCreateNewFolder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateNewFolderCompleted(object state) {
            if ((this.CreateNewFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateNewFolderCompleted(this, new CreateNewFolderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateNewFolderAsync(string strListName, string strParentFolder) {
            this.CreateNewFolderAsync(strListName, strParentFolder, null);
        }
        
        public void CreateNewFolderAsync(string strListName, string strParentFolder, object userState) {
            if ((this.onBeginCreateNewFolderDelegate == null)) {
                this.onBeginCreateNewFolderDelegate = new BeginOperationDelegate(this.OnBeginCreateNewFolder);
            }
            if ((this.onEndCreateNewFolderDelegate == null)) {
                this.onEndCreateNewFolderDelegate = new EndOperationDelegate(this.OnEndCreateNewFolder);
            }
            if ((this.onCreateNewFolderCompletedDelegate == null)) {
                this.onCreateNewFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateNewFolderCompleted);
            }
            base.InvokeAsync(this.onBeginCreateNewFolderDelegate, new object[] {
                        strListName,
                        strParentFolder}, this.onEndCreateNewFolderDelegate, this.onCreateNewFolderCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WssSVLib.Imaging.ImagingSoap CreateChannel() {
            return new ImagingSoapClientChannel(this);
        }
        
        private class ImagingSoapClientChannel : ChannelBase<WssSVLib.Imaging.ImagingSoap>, WssSVLib.Imaging.ImagingSoap {
            
            public ImagingSoapClientChannel(System.ServiceModel.ClientBase<WssSVLib.Imaging.ImagingSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginListPictureLibrary(WssSVLib.Imaging.ListPictureLibraryRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ListPictureLibrary", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.ListPictureLibraryResponse EndListPictureLibrary(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.ListPictureLibraryResponse _result = ((WssSVLib.Imaging.ListPictureLibraryResponse)(base.EndInvoke("ListPictureLibrary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpload(WssSVLib.Imaging.UploadRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Upload", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.UploadResponse EndUpload(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.UploadResponse _result = ((WssSVLib.Imaging.UploadResponse)(base.EndInvoke("Upload", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetItemsXMLData(WssSVLib.Imaging.GetItemsXMLDataRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetItemsXMLData", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.GetItemsXMLDataResponse EndGetItemsXMLData(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.GetItemsXMLDataResponse _result = ((WssSVLib.Imaging.GetItemsXMLDataResponse)(base.EndInvoke("GetItemsXMLData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetItemsByIds(WssSVLib.Imaging.GetItemsByIdsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetItemsByIds", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.GetItemsByIdsResponse EndGetItemsByIds(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.GetItemsByIdsResponse _result = ((WssSVLib.Imaging.GetItemsByIdsResponse)(base.EndInvoke("GetItemsByIds", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelete(WssSVLib.Imaging.DeleteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Delete", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.DeleteResponse EndDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.DeleteResponse _result = ((WssSVLib.Imaging.DeleteResponse)(base.EndInvoke("Delete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDownload(WssSVLib.Imaging.DownloadRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Download", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.DownloadResponse EndDownload(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.DownloadResponse _result = ((WssSVLib.Imaging.DownloadResponse)(base.EndInvoke("Download", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEdit(WssSVLib.Imaging.EditRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Edit", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.EditResponse EndEdit(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.EditResponse _result = ((WssSVLib.Imaging.EditResponse)(base.EndInvoke("Edit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetListItems(WssSVLib.Imaging.GetListItemsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetListItems", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.GetListItemsResponse EndGetListItems(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.GetListItemsResponse _result = ((WssSVLib.Imaging.GetListItemsResponse)(base.EndInvoke("GetListItems", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckSubwebAndList(WssSVLib.Imaging.CheckSubwebAndListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CheckSubwebAndList", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.CheckSubwebAndListResponse EndCheckSubwebAndList(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.CheckSubwebAndListResponse _result = ((WssSVLib.Imaging.CheckSubwebAndListResponse)(base.EndInvoke("CheckSubwebAndList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRename(WssSVLib.Imaging.RenameRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Rename", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.RenameResponse EndRename(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.RenameResponse _result = ((WssSVLib.Imaging.RenameResponse)(base.EndInvoke("Rename", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateNewFolder(WssSVLib.Imaging.CreateNewFolderRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CreateNewFolder", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Imaging.CreateNewFolderResponse EndCreateNewFolder(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Imaging.CreateNewFolderResponse _result = ((WssSVLib.Imaging.CreateNewFolderResponse)(base.EndInvoke("CreateNewFolder", _args, result)));
                return _result;
            }
        }
    }
}

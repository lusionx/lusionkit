//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace WssSVLib.Versions {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", ConfigurationName="Versions.VersionsSoap")]
    public interface VersionsSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/GetVersions", ReplyAction="*")]
        System.IAsyncResult BeginGetVersions(WssSVLib.Versions.GetVersionsRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Versions.GetVersionsResponse EndGetVersions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/RestoreVersion", ReplyAction="*")]
        System.IAsyncResult BeginRestoreVersion(WssSVLib.Versions.RestoreVersionRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Versions.RestoreVersionResponse EndRestoreVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/DeleteVersion", ReplyAction="*")]
        System.IAsyncResult BeginDeleteVersion(WssSVLib.Versions.DeleteVersionRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Versions.DeleteVersionResponse EndDeleteVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/DeleteAllVersions", ReplyAction="*")]
        System.IAsyncResult BeginDeleteAllVersions(WssSVLib.Versions.DeleteAllVersionsRequest request, System.AsyncCallback callback, object asyncState);
        
        WssSVLib.Versions.DeleteAllVersionsResponse EndDeleteAllVersions(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetVersionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetVersions", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Versions.GetVersionsRequestBody Body;
        
        public GetVersionsRequest() {
        }
        
        public GetVersionsRequest(WssSVLib.Versions.GetVersionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class GetVersionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string fileName;
        
        public GetVersionsRequestBody() {
        }
        
        public GetVersionsRequestBody(string fileName) {
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetVersionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetVersionsResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Versions.GetVersionsResponseBody Body;
        
        public GetVersionsResponse() {
        }
        
        public GetVersionsResponse(WssSVLib.Versions.GetVersionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class GetVersionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement GetVersionsResult;
        
        public GetVersionsResponseBody() {
        }
        
        public GetVersionsResponseBody(System.Xml.Linq.XElement GetVersionsResult) {
            this.GetVersionsResult = GetVersionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RestoreVersionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RestoreVersion", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Versions.RestoreVersionRequestBody Body;
        
        public RestoreVersionRequest() {
        }
        
        public RestoreVersionRequest(WssSVLib.Versions.RestoreVersionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class RestoreVersionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string fileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fileVersion;
        
        public RestoreVersionRequestBody() {
        }
        
        public RestoreVersionRequestBody(string fileName, string fileVersion) {
            this.fileName = fileName;
            this.fileVersion = fileVersion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RestoreVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RestoreVersionResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Versions.RestoreVersionResponseBody Body;
        
        public RestoreVersionResponse() {
        }
        
        public RestoreVersionResponse(WssSVLib.Versions.RestoreVersionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class RestoreVersionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement RestoreVersionResult;
        
        public RestoreVersionResponseBody() {
        }
        
        public RestoreVersionResponseBody(System.Xml.Linq.XElement RestoreVersionResult) {
            this.RestoreVersionResult = RestoreVersionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteVersionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteVersion", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Versions.DeleteVersionRequestBody Body;
        
        public DeleteVersionRequest() {
        }
        
        public DeleteVersionRequest(WssSVLib.Versions.DeleteVersionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class DeleteVersionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string fileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fileVersion;
        
        public DeleteVersionRequestBody() {
        }
        
        public DeleteVersionRequestBody(string fileName, string fileVersion) {
            this.fileName = fileName;
            this.fileVersion = fileVersion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteVersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteVersionResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Versions.DeleteVersionResponseBody Body;
        
        public DeleteVersionResponse() {
        }
        
        public DeleteVersionResponse(WssSVLib.Versions.DeleteVersionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class DeleteVersionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement DeleteVersionResult;
        
        public DeleteVersionResponseBody() {
        }
        
        public DeleteVersionResponseBody(System.Xml.Linq.XElement DeleteVersionResult) {
            this.DeleteVersionResult = DeleteVersionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAllVersionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteAllVersions", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Versions.DeleteAllVersionsRequestBody Body;
        
        public DeleteAllVersionsRequest() {
        }
        
        public DeleteAllVersionsRequest(WssSVLib.Versions.DeleteAllVersionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class DeleteAllVersionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string fileName;
        
        public DeleteAllVersionsRequestBody() {
        }
        
        public DeleteAllVersionsRequestBody(string fileName) {
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAllVersionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteAllVersionsResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public WssSVLib.Versions.DeleteAllVersionsResponseBody Body;
        
        public DeleteAllVersionsResponse() {
        }
        
        public DeleteAllVersionsResponse(WssSVLib.Versions.DeleteAllVersionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class DeleteAllVersionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement DeleteAllVersionsResult;
        
        public DeleteAllVersionsResponseBody() {
        }
        
        public DeleteAllVersionsResponseBody(System.Xml.Linq.XElement DeleteAllVersionsResult) {
            this.DeleteAllVersionsResult = DeleteAllVersionsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface VersionsSoapChannel : WssSVLib.Versions.VersionsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class RestoreVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RestoreVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DeleteVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DeleteAllVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAllVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class VersionsSoapClient : System.ServiceModel.ClientBase<WssSVLib.Versions.VersionsSoap>, WssSVLib.Versions.VersionsSoap {
        
        private BeginOperationDelegate onBeginGetVersionsDelegate;
        
        private EndOperationDelegate onEndGetVersionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetVersionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRestoreVersionDelegate;
        
        private EndOperationDelegate onEndRestoreVersionDelegate;
        
        private System.Threading.SendOrPostCallback onRestoreVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVersionDelegate;
        
        private EndOperationDelegate onEndDeleteVersionDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAllVersionsDelegate;
        
        private EndOperationDelegate onEndDeleteAllVersionsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAllVersionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public VersionsSoapClient() {
        }
        
        public VersionsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VersionsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VersionsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VersionsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetVersionsCompletedEventArgs> GetVersionsCompleted;
        
        public event System.EventHandler<RestoreVersionCompletedEventArgs> RestoreVersionCompleted;
        
        public event System.EventHandler<DeleteVersionCompletedEventArgs> DeleteVersionCompleted;
        
        public event System.EventHandler<DeleteAllVersionsCompletedEventArgs> DeleteAllVersionsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Versions.VersionsSoap.BeginGetVersions(WssSVLib.Versions.GetVersionsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVersions(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetVersions(string fileName, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Versions.GetVersionsRequest inValue = new WssSVLib.Versions.GetVersionsRequest();
            inValue.Body = new WssSVLib.Versions.GetVersionsRequestBody();
            inValue.Body.fileName = fileName;
            return ((WssSVLib.Versions.VersionsSoap)(this)).BeginGetVersions(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Versions.GetVersionsResponse WssSVLib.Versions.VersionsSoap.EndGetVersions(System.IAsyncResult result) {
            return base.Channel.EndGetVersions(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndGetVersions(System.IAsyncResult result) {
            WssSVLib.Versions.GetVersionsResponse retVal = ((WssSVLib.Versions.VersionsSoap)(this)).EndGetVersions(result);
            return retVal.Body.GetVersionsResult;
        }
        
        private System.IAsyncResult OnBeginGetVersions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            return this.BeginGetVersions(fileName, callback, asyncState);
        }
        
        private object[] OnEndGetVersions(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndGetVersions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVersionsCompleted(object state) {
            if ((this.GetVersionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVersionsCompleted(this, new GetVersionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVersionsAsync(string fileName) {
            this.GetVersionsAsync(fileName, null);
        }
        
        public void GetVersionsAsync(string fileName, object userState) {
            if ((this.onBeginGetVersionsDelegate == null)) {
                this.onBeginGetVersionsDelegate = new BeginOperationDelegate(this.OnBeginGetVersions);
            }
            if ((this.onEndGetVersionsDelegate == null)) {
                this.onEndGetVersionsDelegate = new EndOperationDelegate(this.OnEndGetVersions);
            }
            if ((this.onGetVersionsCompletedDelegate == null)) {
                this.onGetVersionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVersionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetVersionsDelegate, new object[] {
                        fileName}, this.onEndGetVersionsDelegate, this.onGetVersionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Versions.VersionsSoap.BeginRestoreVersion(WssSVLib.Versions.RestoreVersionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRestoreVersion(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginRestoreVersion(string fileName, string fileVersion, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Versions.RestoreVersionRequest inValue = new WssSVLib.Versions.RestoreVersionRequest();
            inValue.Body = new WssSVLib.Versions.RestoreVersionRequestBody();
            inValue.Body.fileName = fileName;
            inValue.Body.fileVersion = fileVersion;
            return ((WssSVLib.Versions.VersionsSoap)(this)).BeginRestoreVersion(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Versions.RestoreVersionResponse WssSVLib.Versions.VersionsSoap.EndRestoreVersion(System.IAsyncResult result) {
            return base.Channel.EndRestoreVersion(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndRestoreVersion(System.IAsyncResult result) {
            WssSVLib.Versions.RestoreVersionResponse retVal = ((WssSVLib.Versions.VersionsSoap)(this)).EndRestoreVersion(result);
            return retVal.Body.RestoreVersionResult;
        }
        
        private System.IAsyncResult OnBeginRestoreVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            string fileVersion = ((string)(inValues[1]));
            return this.BeginRestoreVersion(fileName, fileVersion, callback, asyncState);
        }
        
        private object[] OnEndRestoreVersion(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndRestoreVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRestoreVersionCompleted(object state) {
            if ((this.RestoreVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RestoreVersionCompleted(this, new RestoreVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RestoreVersionAsync(string fileName, string fileVersion) {
            this.RestoreVersionAsync(fileName, fileVersion, null);
        }
        
        public void RestoreVersionAsync(string fileName, string fileVersion, object userState) {
            if ((this.onBeginRestoreVersionDelegate == null)) {
                this.onBeginRestoreVersionDelegate = new BeginOperationDelegate(this.OnBeginRestoreVersion);
            }
            if ((this.onEndRestoreVersionDelegate == null)) {
                this.onEndRestoreVersionDelegate = new EndOperationDelegate(this.OnEndRestoreVersion);
            }
            if ((this.onRestoreVersionCompletedDelegate == null)) {
                this.onRestoreVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRestoreVersionCompleted);
            }
            base.InvokeAsync(this.onBeginRestoreVersionDelegate, new object[] {
                        fileName,
                        fileVersion}, this.onEndRestoreVersionDelegate, this.onRestoreVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Versions.VersionsSoap.BeginDeleteVersion(WssSVLib.Versions.DeleteVersionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVersion(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDeleteVersion(string fileName, string fileVersion, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Versions.DeleteVersionRequest inValue = new WssSVLib.Versions.DeleteVersionRequest();
            inValue.Body = new WssSVLib.Versions.DeleteVersionRequestBody();
            inValue.Body.fileName = fileName;
            inValue.Body.fileVersion = fileVersion;
            return ((WssSVLib.Versions.VersionsSoap)(this)).BeginDeleteVersion(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Versions.DeleteVersionResponse WssSVLib.Versions.VersionsSoap.EndDeleteVersion(System.IAsyncResult result) {
            return base.Channel.EndDeleteVersion(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndDeleteVersion(System.IAsyncResult result) {
            WssSVLib.Versions.DeleteVersionResponse retVal = ((WssSVLib.Versions.VersionsSoap)(this)).EndDeleteVersion(result);
            return retVal.Body.DeleteVersionResult;
        }
        
        private System.IAsyncResult OnBeginDeleteVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            string fileVersion = ((string)(inValues[1]));
            return this.BeginDeleteVersion(fileName, fileVersion, callback, asyncState);
        }
        
        private object[] OnEndDeleteVersion(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndDeleteVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteVersionCompleted(object state) {
            if ((this.DeleteVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVersionCompleted(this, new DeleteVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVersionAsync(string fileName, string fileVersion) {
            this.DeleteVersionAsync(fileName, fileVersion, null);
        }
        
        public void DeleteVersionAsync(string fileName, string fileVersion, object userState) {
            if ((this.onBeginDeleteVersionDelegate == null)) {
                this.onBeginDeleteVersionDelegate = new BeginOperationDelegate(this.OnBeginDeleteVersion);
            }
            if ((this.onEndDeleteVersionDelegate == null)) {
                this.onEndDeleteVersionDelegate = new EndOperationDelegate(this.OnEndDeleteVersion);
            }
            if ((this.onDeleteVersionCompletedDelegate == null)) {
                this.onDeleteVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVersionCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVersionDelegate, new object[] {
                        fileName,
                        fileVersion}, this.onEndDeleteVersionDelegate, this.onDeleteVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Versions.VersionsSoap.BeginDeleteAllVersions(WssSVLib.Versions.DeleteAllVersionsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAllVersions(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDeleteAllVersions(string fileName, System.AsyncCallback callback, object asyncState) {
            WssSVLib.Versions.DeleteAllVersionsRequest inValue = new WssSVLib.Versions.DeleteAllVersionsRequest();
            inValue.Body = new WssSVLib.Versions.DeleteAllVersionsRequestBody();
            inValue.Body.fileName = fileName;
            return ((WssSVLib.Versions.VersionsSoap)(this)).BeginDeleteAllVersions(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WssSVLib.Versions.DeleteAllVersionsResponse WssSVLib.Versions.VersionsSoap.EndDeleteAllVersions(System.IAsyncResult result) {
            return base.Channel.EndDeleteAllVersions(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement EndDeleteAllVersions(System.IAsyncResult result) {
            WssSVLib.Versions.DeleteAllVersionsResponse retVal = ((WssSVLib.Versions.VersionsSoap)(this)).EndDeleteAllVersions(result);
            return retVal.Body.DeleteAllVersionsResult;
        }
        
        private System.IAsyncResult OnBeginDeleteAllVersions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            return this.BeginDeleteAllVersions(fileName, callback, asyncState);
        }
        
        private object[] OnEndDeleteAllVersions(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.EndDeleteAllVersions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAllVersionsCompleted(object state) {
            if ((this.DeleteAllVersionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAllVersionsCompleted(this, new DeleteAllVersionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAllVersionsAsync(string fileName) {
            this.DeleteAllVersionsAsync(fileName, null);
        }
        
        public void DeleteAllVersionsAsync(string fileName, object userState) {
            if ((this.onBeginDeleteAllVersionsDelegate == null)) {
                this.onBeginDeleteAllVersionsDelegate = new BeginOperationDelegate(this.OnBeginDeleteAllVersions);
            }
            if ((this.onEndDeleteAllVersionsDelegate == null)) {
                this.onEndDeleteAllVersionsDelegate = new EndOperationDelegate(this.OnEndDeleteAllVersions);
            }
            if ((this.onDeleteAllVersionsCompletedDelegate == null)) {
                this.onDeleteAllVersionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAllVersionsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAllVersionsDelegate, new object[] {
                        fileName}, this.onEndDeleteAllVersionsDelegate, this.onDeleteAllVersionsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WssSVLib.Versions.VersionsSoap CreateChannel() {
            return new VersionsSoapClientChannel(this);
        }
        
        private class VersionsSoapClientChannel : ChannelBase<WssSVLib.Versions.VersionsSoap>, WssSVLib.Versions.VersionsSoap {
            
            public VersionsSoapClientChannel(System.ServiceModel.ClientBase<WssSVLib.Versions.VersionsSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetVersions(WssSVLib.Versions.GetVersionsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetVersions", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Versions.GetVersionsResponse EndGetVersions(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Versions.GetVersionsResponse _result = ((WssSVLib.Versions.GetVersionsResponse)(base.EndInvoke("GetVersions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRestoreVersion(WssSVLib.Versions.RestoreVersionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("RestoreVersion", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Versions.RestoreVersionResponse EndRestoreVersion(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Versions.RestoreVersionResponse _result = ((WssSVLib.Versions.RestoreVersionResponse)(base.EndInvoke("RestoreVersion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteVersion(WssSVLib.Versions.DeleteVersionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DeleteVersion", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Versions.DeleteVersionResponse EndDeleteVersion(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Versions.DeleteVersionResponse _result = ((WssSVLib.Versions.DeleteVersionResponse)(base.EndInvoke("DeleteVersion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteAllVersions(WssSVLib.Versions.DeleteAllVersionsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAllVersions", _args, callback, asyncState);
                return _result;
            }
            
            public WssSVLib.Versions.DeleteAllVersionsResponse EndDeleteAllVersions(System.IAsyncResult result) {
                object[] _args = new object[0];
                WssSVLib.Versions.DeleteAllVersionsResponse _result = ((WssSVLib.Versions.DeleteAllVersionsResponse)(base.EndInvoke("DeleteAllVersions", _args, result)));
                return _result;
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace WssSVLib.Sites {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", ConfigurationName="Sites.SitesSoap")]
    public interface SitesSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/GetSiteTemplates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.IAsyncResult BeginGetSiteTemplates(uint LCID, System.AsyncCallback callback, object asyncState);
        
        uint EndGetSiteTemplates(out Template[] TemplateList, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.IAsyncResult BeginGetUpdatedFormDigest(System.AsyncCallback callback, object asyncState);
        
        string EndGetUpdatedFormDigest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ExportWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.IAsyncResult BeginExportWeb(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize, System.AsyncCallback callback, object asyncState);
        
        int EndExportWeb(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://schemas.microsoft.com/sharepoint/soap/ImportWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.IAsyncResult BeginImportWeb(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite, System.AsyncCallback callback, object asyncState);
        
        int EndImportWeb(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class Template : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string titleField;
        
        private string nameField;
        
        private bool isUniqueField;
        
        private bool isHiddenField;
        
        private string descriptionField;
        
        private string imageUrlField;
        
        private bool isCustomField;
        
        private bool isSubWebOnlyField;
        
        private bool isRootWebOnlyField;
        
        private string displayCategoryField;
        
        private string filterCategoriesField;
        
        private bool hasProvisionClassField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsUnique {
            get {
                return this.isUniqueField;
            }
            set {
                this.isUniqueField = value;
                this.RaisePropertyChanged("IsUnique");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsHidden {
            get {
                return this.isHiddenField;
            }
            set {
                this.isHiddenField = value;
                this.RaisePropertyChanged("IsHidden");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
                this.RaisePropertyChanged("ImageUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsCustom {
            get {
                return this.isCustomField;
            }
            set {
                this.isCustomField = value;
                this.RaisePropertyChanged("IsCustom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsSubWebOnly {
            get {
                return this.isSubWebOnlyField;
            }
            set {
                this.isSubWebOnlyField = value;
                this.RaisePropertyChanged("IsSubWebOnly");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsRootWebOnly {
            get {
                return this.isRootWebOnlyField;
            }
            set {
                this.isRootWebOnlyField = value;
                this.RaisePropertyChanged("IsRootWebOnly");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DisplayCategory {
            get {
                return this.displayCategoryField;
            }
            set {
                this.displayCategoryField = value;
                this.RaisePropertyChanged("DisplayCategory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FilterCategories {
            get {
                return this.filterCategoriesField;
            }
            set {
                this.filterCategoriesField = value;
                this.RaisePropertyChanged("FilterCategories");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HasProvisionClass {
            get {
                return this.hasProvisionClassField;
            }
            set {
                this.hasProvisionClassField = value;
                this.RaisePropertyChanged("HasProvisionClass");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface SitesSoapChannel : WssSVLib.Sites.SitesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetSiteTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSiteTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Template[] TemplateList {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Template[])(this.results[0]));
            }
        }
        
        public uint Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((uint)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetUpdatedFormDigestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUpdatedFormDigestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ExportWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExportWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ImportWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ImportWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SitesSoapClient : System.ServiceModel.ClientBase<WssSVLib.Sites.SitesSoap>, WssSVLib.Sites.SitesSoap {
        
        private BeginOperationDelegate onBeginGetSiteTemplatesDelegate;
        
        private EndOperationDelegate onEndGetSiteTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSiteTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUpdatedFormDigestDelegate;
        
        private EndOperationDelegate onEndGetUpdatedFormDigestDelegate;
        
        private System.Threading.SendOrPostCallback onGetUpdatedFormDigestCompletedDelegate;
        
        private BeginOperationDelegate onBeginExportWebDelegate;
        
        private EndOperationDelegate onEndExportWebDelegate;
        
        private System.Threading.SendOrPostCallback onExportWebCompletedDelegate;
        
        private BeginOperationDelegate onBeginImportWebDelegate;
        
        private EndOperationDelegate onEndImportWebDelegate;
        
        private System.Threading.SendOrPostCallback onImportWebCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SitesSoapClient() {
        }
        
        public SitesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SitesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SitesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SitesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetSiteTemplatesCompletedEventArgs> GetSiteTemplatesCompleted;
        
        public event System.EventHandler<GetUpdatedFormDigestCompletedEventArgs> GetUpdatedFormDigestCompleted;
        
        public event System.EventHandler<ExportWebCompletedEventArgs> ExportWebCompleted;
        
        public event System.EventHandler<ImportWebCompletedEventArgs> ImportWebCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Sites.SitesSoap.BeginGetSiteTemplates(uint LCID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSiteTemplates(LCID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        uint WssSVLib.Sites.SitesSoap.EndGetSiteTemplates(out Template[] TemplateList, System.IAsyncResult result) {
            return base.Channel.EndGetSiteTemplates(out TemplateList, result);
        }
        
        private System.IAsyncResult OnBeginGetSiteTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            uint LCID = ((uint)(inValues[0]));
            return ((WssSVLib.Sites.SitesSoap)(this)).BeginGetSiteTemplates(LCID, callback, asyncState);
        }
        
        private object[] OnEndGetSiteTemplates(System.IAsyncResult result) {
            Template[] TemplateList = this.GetDefaultValueForInitialization<Template[]>();
            uint retVal = ((WssSVLib.Sites.SitesSoap)(this)).EndGetSiteTemplates(out TemplateList, result);
            return new object[] {
                    TemplateList,
                    retVal};
        }
        
        private void OnGetSiteTemplatesCompleted(object state) {
            if ((this.GetSiteTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSiteTemplatesCompleted(this, new GetSiteTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSiteTemplatesAsync(uint LCID) {
            this.GetSiteTemplatesAsync(LCID, null);
        }
        
        public void GetSiteTemplatesAsync(uint LCID, object userState) {
            if ((this.onBeginGetSiteTemplatesDelegate == null)) {
                this.onBeginGetSiteTemplatesDelegate = new BeginOperationDelegate(this.OnBeginGetSiteTemplates);
            }
            if ((this.onEndGetSiteTemplatesDelegate == null)) {
                this.onEndGetSiteTemplatesDelegate = new EndOperationDelegate(this.OnEndGetSiteTemplates);
            }
            if ((this.onGetSiteTemplatesCompletedDelegate == null)) {
                this.onGetSiteTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSiteTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSiteTemplatesDelegate, new object[] {
                        LCID}, this.onEndGetSiteTemplatesDelegate, this.onGetSiteTemplatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Sites.SitesSoap.BeginGetUpdatedFormDigest(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUpdatedFormDigest(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WssSVLib.Sites.SitesSoap.EndGetUpdatedFormDigest(System.IAsyncResult result) {
            return base.Channel.EndGetUpdatedFormDigest(result);
        }
        
        private System.IAsyncResult OnBeginGetUpdatedFormDigest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WssSVLib.Sites.SitesSoap)(this)).BeginGetUpdatedFormDigest(callback, asyncState);
        }
        
        private object[] OnEndGetUpdatedFormDigest(System.IAsyncResult result) {
            string retVal = ((WssSVLib.Sites.SitesSoap)(this)).EndGetUpdatedFormDigest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUpdatedFormDigestCompleted(object state) {
            if ((this.GetUpdatedFormDigestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUpdatedFormDigestCompleted(this, new GetUpdatedFormDigestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUpdatedFormDigestAsync() {
            this.GetUpdatedFormDigestAsync(null);
        }
        
        public void GetUpdatedFormDigestAsync(object userState) {
            if ((this.onBeginGetUpdatedFormDigestDelegate == null)) {
                this.onBeginGetUpdatedFormDigestDelegate = new BeginOperationDelegate(this.OnBeginGetUpdatedFormDigest);
            }
            if ((this.onEndGetUpdatedFormDigestDelegate == null)) {
                this.onEndGetUpdatedFormDigestDelegate = new EndOperationDelegate(this.OnEndGetUpdatedFormDigest);
            }
            if ((this.onGetUpdatedFormDigestCompletedDelegate == null)) {
                this.onGetUpdatedFormDigestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUpdatedFormDigestCompleted);
            }
            base.InvokeAsync(this.onBeginGetUpdatedFormDigestDelegate, null, this.onEndGetUpdatedFormDigestDelegate, this.onGetUpdatedFormDigestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Sites.SitesSoap.BeginExportWeb(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExportWeb(jobName, webUrl, dataPath, includeSubwebs, includeUserSecurity, overWrite, cabSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WssSVLib.Sites.SitesSoap.EndExportWeb(System.IAsyncResult result) {
            return base.Channel.EndExportWeb(result);
        }
        
        private System.IAsyncResult OnBeginExportWeb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jobName = ((string)(inValues[0]));
            string webUrl = ((string)(inValues[1]));
            string dataPath = ((string)(inValues[2]));
            bool includeSubwebs = ((bool)(inValues[3]));
            bool includeUserSecurity = ((bool)(inValues[4]));
            bool overWrite = ((bool)(inValues[5]));
            int cabSize = ((int)(inValues[6]));
            return ((WssSVLib.Sites.SitesSoap)(this)).BeginExportWeb(jobName, webUrl, dataPath, includeSubwebs, includeUserSecurity, overWrite, cabSize, callback, asyncState);
        }
        
        private object[] OnEndExportWeb(System.IAsyncResult result) {
            int retVal = ((WssSVLib.Sites.SitesSoap)(this)).EndExportWeb(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExportWebCompleted(object state) {
            if ((this.ExportWebCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExportWebCompleted(this, new ExportWebCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExportWebAsync(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize) {
            this.ExportWebAsync(jobName, webUrl, dataPath, includeSubwebs, includeUserSecurity, overWrite, cabSize, null);
        }
        
        public void ExportWebAsync(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize, object userState) {
            if ((this.onBeginExportWebDelegate == null)) {
                this.onBeginExportWebDelegate = new BeginOperationDelegate(this.OnBeginExportWeb);
            }
            if ((this.onEndExportWebDelegate == null)) {
                this.onEndExportWebDelegate = new EndOperationDelegate(this.OnEndExportWeb);
            }
            if ((this.onExportWebCompletedDelegate == null)) {
                this.onExportWebCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExportWebCompleted);
            }
            base.InvokeAsync(this.onBeginExportWebDelegate, new object[] {
                        jobName,
                        webUrl,
                        dataPath,
                        includeSubwebs,
                        includeUserSecurity,
                        overWrite,
                        cabSize}, this.onEndExportWebDelegate, this.onExportWebCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WssSVLib.Sites.SitesSoap.BeginImportWeb(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginImportWeb(jobName, webUrl, dataFiles, logPath, includeUserSecurity, overWrite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WssSVLib.Sites.SitesSoap.EndImportWeb(System.IAsyncResult result) {
            return base.Channel.EndImportWeb(result);
        }
        
        private System.IAsyncResult OnBeginImportWeb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jobName = ((string)(inValues[0]));
            string webUrl = ((string)(inValues[1]));
            string[] dataFiles = ((string[])(inValues[2]));
            string logPath = ((string)(inValues[3]));
            bool includeUserSecurity = ((bool)(inValues[4]));
            bool overWrite = ((bool)(inValues[5]));
            return ((WssSVLib.Sites.SitesSoap)(this)).BeginImportWeb(jobName, webUrl, dataFiles, logPath, includeUserSecurity, overWrite, callback, asyncState);
        }
        
        private object[] OnEndImportWeb(System.IAsyncResult result) {
            int retVal = ((WssSVLib.Sites.SitesSoap)(this)).EndImportWeb(result);
            return new object[] {
                    retVal};
        }
        
        private void OnImportWebCompleted(object state) {
            if ((this.ImportWebCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ImportWebCompleted(this, new ImportWebCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ImportWebAsync(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite) {
            this.ImportWebAsync(jobName, webUrl, dataFiles, logPath, includeUserSecurity, overWrite, null);
        }
        
        public void ImportWebAsync(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite, object userState) {
            if ((this.onBeginImportWebDelegate == null)) {
                this.onBeginImportWebDelegate = new BeginOperationDelegate(this.OnBeginImportWeb);
            }
            if ((this.onEndImportWebDelegate == null)) {
                this.onEndImportWebDelegate = new EndOperationDelegate(this.OnEndImportWeb);
            }
            if ((this.onImportWebCompletedDelegate == null)) {
                this.onImportWebCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnImportWebCompleted);
            }
            base.InvokeAsync(this.onBeginImportWebDelegate, new object[] {
                        jobName,
                        webUrl,
                        dataFiles,
                        logPath,
                        includeUserSecurity,
                        overWrite}, this.onEndImportWebDelegate, this.onImportWebCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WssSVLib.Sites.SitesSoap CreateChannel() {
            return new SitesSoapClientChannel(this);
        }
        
        private class SitesSoapClientChannel : ChannelBase<WssSVLib.Sites.SitesSoap>, WssSVLib.Sites.SitesSoap {
            
            public SitesSoapClientChannel(System.ServiceModel.ClientBase<WssSVLib.Sites.SitesSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSiteTemplates(uint LCID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = LCID;
                System.IAsyncResult _result = base.BeginInvoke("GetSiteTemplates", _args, callback, asyncState);
                return _result;
            }
            
            public uint EndGetSiteTemplates(out Template[] TemplateList, System.IAsyncResult result) {
                object[] _args = new object[1];
                uint _result = ((uint)(base.EndInvoke("GetSiteTemplates", _args, result)));
                TemplateList = ((Template[])(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUpdatedFormDigest(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUpdatedFormDigest", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetUpdatedFormDigest(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetUpdatedFormDigest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExportWeb(string jobName, string webUrl, string dataPath, bool includeSubwebs, bool includeUserSecurity, bool overWrite, int cabSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = jobName;
                _args[1] = webUrl;
                _args[2] = dataPath;
                _args[3] = includeSubwebs;
                _args[4] = includeUserSecurity;
                _args[5] = overWrite;
                _args[6] = cabSize;
                System.IAsyncResult _result = base.BeginInvoke("ExportWeb", _args, callback, asyncState);
                return _result;
            }
            
            public int EndExportWeb(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("ExportWeb", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginImportWeb(string jobName, string webUrl, string[] dataFiles, string logPath, bool includeUserSecurity, bool overWrite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = jobName;
                _args[1] = webUrl;
                _args[2] = dataFiles;
                _args[3] = logPath;
                _args[4] = includeUserSecurity;
                _args[5] = overWrite;
                System.IAsyncResult _result = base.BeginInvoke("ImportWeb", _args, callback, asyncState);
                return _result;
            }
            
            public int EndImportWeb(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("ImportWeb", _args, result)));
                return _result;
            }
        }
    }
}

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Alxf.DAL.Demo.Video
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AlxfDemo")]
	public partial class ADBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVideoComment(VideoComment instance);
    partial void UpdateVideoComment(VideoComment instance);
    partial void DeleteVideoComment(VideoComment instance);
    partial void InsertVideoType(VideoType instance);
    partial void UpdateVideoType(VideoType instance);
    partial void DeleteVideoType(VideoType instance);
    partial void InsertVideoObj(VideoObj instance);
    partial void UpdateVideoObj(VideoObj instance);
    partial void DeleteVideoObj(VideoObj instance);
    #endregion
		
		public ADBDataContext() : 
				base(global::Alxf.DAL.Demo.Properties.Settings.Default.AlxfDemoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ADBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ADBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ADBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ADBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VideoComment> VideoComments
		{
			get
			{
				return this.GetTable<VideoComment>();
			}
		}
		
		public System.Data.Linq.Table<VideoType> VideoTypes
		{
			get
			{
				return this.GetTable<VideoType>();
			}
		}
		
		public System.Data.Linq.Table<VideoObj> VideoObjs
		{
			get
			{
				return this.GetTable<VideoObj>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VideoComment")]
	public partial class VideoComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _CartonID;
		
		private string _Content;
		
		private string _UserName;
		
		private System.DateTime _UpdateTime;
		
		private System.DateTime _AddTime;
		
		private EntityRef<VideoObj> _VideoObj;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCartonIDChanging(System.Guid value);
    partial void OnCartonIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    partial void OnAddTimeChanging(System.DateTime value);
    partial void OnAddTimeChanged();
    #endregion
		
		public VideoComment()
		{
			this._VideoObj = default(EntityRef<VideoObj>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CartonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CartonID
		{
			get
			{
				return this._CartonID;
			}
			set
			{
				if ((this._CartonID != value))
				{
					if (this._VideoObj.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCartonIDChanging(value);
					this.SendPropertyChanging();
					this._CartonID = value;
					this.SendPropertyChanged("CartonID");
					this.OnCartonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="DateTime NOT NULL")]
		public System.DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoObj_VideoComment", Storage="_VideoObj", ThisKey="CartonID", OtherKey="ID", IsForeignKey=true)]
		public VideoObj VideoObj
		{
			get
			{
				return this._VideoObj.Entity;
			}
			set
			{
				VideoObj previousValue = this._VideoObj.Entity;
				if (((previousValue != value) 
							|| (this._VideoObj.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VideoObj.Entity = null;
						previousValue.VideoComments.Remove(this);
					}
					this._VideoObj.Entity = value;
					if ((value != null))
					{
						value.VideoComments.Add(this);
						this._CartonID = value.ID;
					}
					else
					{
						this._CartonID = default(System.Guid);
					}
					this.SendPropertyChanged("VideoObj");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VideoType")]
	public partial class VideoType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private string _Remark;
		
		private EntitySet<VideoObj> _VideoObjs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public VideoType()
		{
			this._VideoObjs = new EntitySet<VideoObj>(new Action<VideoObj>(this.attach_VideoObjs), new Action<VideoObj>(this.detach_VideoObjs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoType_VideoObj", Storage="_VideoObjs", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<VideoObj> VideoObjs
		{
			get
			{
				return this._VideoObjs;
			}
			set
			{
				this._VideoObjs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VideoObjs(VideoObj entity)
		{
			this.SendPropertyChanging();
			entity.VideoType = this;
		}
		
		private void detach_VideoObjs(VideoObj entity)
		{
			this.SendPropertyChanging();
			entity.VideoType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VideoObj")]
	public partial class VideoObj : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name_cn;
		
		private string _Name_en;
		
		private System.Guid _TypeID;
		
		private int _Episodes;
		
		private System.DateTime _UpdateTime;
		
		private string _DownLink;
		
		private string _Remark;
		
		private EntitySet<VideoComment> _VideoComments;
		
		private EntityRef<VideoType> _VideoType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnName_cnChanging(string value);
    partial void OnName_cnChanged();
    partial void OnName_enChanging(string value);
    partial void OnName_enChanged();
    partial void OnTypeIDChanging(System.Guid value);
    partial void OnTypeIDChanged();
    partial void OnEpisodesChanging(int value);
    partial void OnEpisodesChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    partial void OnDownLinkChanging(string value);
    partial void OnDownLinkChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public VideoObj()
		{
			this._VideoComments = new EntitySet<VideoComment>(new Action<VideoComment>(this.attach_VideoComments), new Action<VideoComment>(this.detach_VideoComments));
			this._VideoType = default(EntityRef<VideoType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_cn", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Name_cn
		{
			get
			{
				return this._Name_cn;
			}
			set
			{
				if ((this._Name_cn != value))
				{
					this.OnName_cnChanging(value);
					this.SendPropertyChanging();
					this._Name_cn = value;
					this.SendPropertyChanged("Name_cn");
					this.OnName_cnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_en", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name_en
		{
			get
			{
				return this._Name_en;
			}
			set
			{
				if ((this._Name_en != value))
				{
					this.OnName_enChanging(value);
					this.SendPropertyChanging();
					this._Name_en = value;
					this.SendPropertyChanged("Name_en");
					this.OnName_enChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._VideoType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Episodes", DbType="Int NOT NULL")]
		public int Episodes
		{
			get
			{
				return this._Episodes;
			}
			set
			{
				if ((this._Episodes != value))
				{
					this.OnEpisodesChanging(value);
					this.SendPropertyChanging();
					this._Episodes = value;
					this.SendPropertyChanged("Episodes");
					this.OnEpisodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownLink", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DownLink
		{
			get
			{
				return this._DownLink;
			}
			set
			{
				if ((this._DownLink != value))
				{
					this.OnDownLinkChanging(value);
					this.SendPropertyChanging();
					this._DownLink = value;
					this.SendPropertyChanged("DownLink");
					this.OnDownLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoObj_VideoComment", Storage="_VideoComments", ThisKey="ID", OtherKey="CartonID")]
		public EntitySet<VideoComment> VideoComments
		{
			get
			{
				return this._VideoComments;
			}
			set
			{
				this._VideoComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VideoType_VideoObj", Storage="_VideoType", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public VideoType VideoType
		{
			get
			{
				return this._VideoType.Entity;
			}
			set
			{
				VideoType previousValue = this._VideoType.Entity;
				if (((previousValue != value) 
							|| (this._VideoType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VideoType.Entity = null;
						previousValue.VideoObjs.Remove(this);
					}
					this._VideoType.Entity = value;
					if ((value != null))
					{
						value.VideoObjs.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(System.Guid);
					}
					this.SendPropertyChanged("VideoType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VideoComments(VideoComment entity)
		{
			this.SendPropertyChanging();
			entity.VideoObj = this;
		}
		
		private void detach_VideoComments(VideoComment entity)
		{
			this.SendPropertyChanging();
			entity.VideoObj = null;
		}
	}
}
#pragma warning restore 1591
